"use strict";(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[6214],{6214:(e,t,r)=>{r.d(t,{Gt:()=>ea});var n=r(7733),a=r(3628),i=r(9700),o=r(4778),s=r(953),l=r(9276),u=r(1426),p=r(4238),c=r(8774),f=r(1078),d=r(8756),m=r(4087),y=r(1365),h=r(764),g=r(5598),v=r(4662),b=r(6679),x=r(6444),w=r(6758),k=r(4218),z=r(2757),A=r(4602),S=r(8063),M=r(5923),_=r(8100),q=r(942),$=r(4863),C=r(6391),E=r(915),T=r(1685),I=r(6837);function j(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var F,P={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],rebeccapurple:[102,51,153,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function D(e){return(e=Math.round(e))<0?0:e>255?255:e}function R(e){return e<0?0:e>1?1:e}function O(e){return"%"===e[e.length-1]?D(parseFloat(e)/100*255):D(parseInt(e))}function N(e){return"%"===e[e.length-1]?R(parseFloat(e)/100):R(parseFloat(e))}function L(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}try{F={}.parseCSSColor=function(e){var t,r=e.replace(/ /g,"").toLowerCase();if(r in P)return P[r].slice();if("#"===r[0])return 4===r.length?(t=parseInt(r.substr(1),16))>=0&&t<=4095?[(3840&t)>>4|(3840&t)>>8,240&t|(240&t)>>4,15&t|(15&t)<<4,1]:null:7===r.length&&(t=parseInt(r.substr(1),16))>=0&&t<=16777215?[(16711680&t)>>16,(65280&t)>>8,255&t,1]:null;var n=r.indexOf("("),a=r.indexOf(")");if(-1!==n&&a+1===r.length){var i=r.substr(0,n),o=r.substr(n+1,a-(n+1)).split(","),s=1;switch(i){case"rgba":if(4!==o.length)return null;s=N(o.pop());case"rgb":return 3!==o.length?null:[O(o[0]),O(o[1]),O(o[2]),s];case"hsla":if(4!==o.length)return null;s=N(o.pop());case"hsl":if(3!==o.length)return null;var l=(parseFloat(o[0])%360+360)%360/360,u=N(o[1]),p=N(o[2]),c=p<=.5?p*(u+1):p+u-p*u,f=2*p-c;return[D(255*L(f,c,l+1/3)),D(255*L(f,c,l)),D(255*L(f,c,l-1/3)),s];default:return null}}return null}}catch(e){}class U{constructor(e,t,r,n=1){this.r=e,this.g=t,this.b=r,this.a=n}static parse(e){if(!e)return;if(e instanceof U)return e;if("string"!=typeof e)return;const t=F(e);return t?new U(t[0]/255*t[3],t[1]/255*t[3],t[2]/255*t[3],t[3]):void 0}toString(){const[e,t,r,n]=this.toArray();return`rgba(${Math.round(e)},${Math.round(t)},${Math.round(r)},${n})`}toArray(){const{r:e,g:t,b:r,a:n}=this;return 0===n?[0,0,0,0]:[255*e/n,255*t/n,255*r/n,n]}toArray01(){const{r:e,g:t,b:r,a:n}=this;return 0===n?[0,0,0,0]:[e/n,t/n,r/n,n]}toArray01PremultipliedAlpha(){const{r:e,g:t,b:r,a:n}=this;return[e,t,r,n]}}U.black=new U(0,0,0,1),U.white=new U(1,1,1,1),U.transparent=new U(0,0,0,0),U.red=new U(1,0,0,1),U.blue=new U(0,0,1,1);var V=U;function G(e){return"object"==typeof e?["literal",e]:e}function J(e){switch(e.colorSpace){case"hcl":return"interpolate-hcl";case"lab":return"interpolate-lab";default:return"interpolate"}}function W(e,t){const r=G((n=e.default,a=t.default,void 0!==n?n:void 0!==a?a:void 0));var n,a;return void 0===r&&"resolvedImage"===t.type?"":r}function Z(e,t,r){const n=Y(e,t),a=["get",e.property];if("categorical"===n&&"boolean"==typeof r[0][0]){const n=["case"];for(const e of r)n.push(["==",a,e[0]],e[1]);return n.push(W(e,t)),n}if("categorical"===n){const n=["match",a];for(const e of r)B(n,e[0],e[1],!1);return n.push(W(e,t)),n}if("interval"===n){const t=["step",["number",a]];for(const e of r)B(t,e[0],e[1],!0);return X(t),void 0===e.default?t:["case",["==",["typeof",a],"number"],t,G(e.default)]}if("exponential"===n){const t=void 0!==e.base?e.base:1,n=[J(e),1===t?["linear"]:["exponential",t],["number",a]];for(const e of r)B(n,e[0],e[1],!1);return void 0===e.default?n:["case",["==",["typeof",a],"number"],n,G(e.default)]}throw new Error(`Unknown property function type ${n}`)}function X(e){"step"===e[0]&&3===e.length&&(e.push(0),e.push(e[3]))}function B(e,t,r,n){e.length>3&&t===e[e.length-2]||(n&&2===e.length||e.push(t),e.push(r))}function Y(e,t){return e.type?e.type:t.expression.interpolated?"exponential":"interval"}function H(e){const t=["concat"],r=/{([^{}]+)}/g;let n=0;for(let a=r.exec(e);null!==a;a=r.exec(e)){const i=e.slice(n,r.lastIndex-a[0].length);n=r.lastIndex,i.length>0&&t.push(i),t.push(["get",a[1]])}if(1===t.length)return e;if(n<e.length)t.push(e.slice(n));else if(2===t.length)return["to-string",t[1]];return t}class K extends Error{constructor(e,t){super(t),this.message=t,this.key=e}}var Q=K;class ee{constructor(e,t=[]){this.parent=e,this.bindings={};for(const[e,r]of t)this.bindings[e]=r}concat(e){return new ee(this,e)}get(e){if(this.bindings[e])return this.bindings[e];if(this.parent)return this.parent.get(e);throw new Error(`${e} not found in scope.`)}has(e){return!!this.bindings[e]||!!this.parent&&this.parent.has(e)}}var te=ee;const re={kind:"null"},ne={kind:"number"},ae={kind:"string"},ie={kind:"boolean"},oe={kind:"color"},se={kind:"object"},le={kind:"value"},ue={kind:"collator"},pe={kind:"formatted"},ce={kind:"resolvedImage"};function fe(e,t){return{kind:"array",itemType:e,N:t}}function de(e){if("array"===e.kind){const t=de(e.itemType);return"number"==typeof e.N?`array<${t}, ${e.N}>`:"value"===e.itemType.kind?"array":`array<${t}>`}return e.kind}const me=[re,ne,ae,ie,oe,pe,se,fe(le),ce];function ye(e,t){if("error"===t.kind)return null;if("array"===e.kind){if("array"===t.kind&&(0===t.N&&"value"===t.itemType.kind||!ye(e.itemType,t.itemType))&&("number"!=typeof e.N||e.N===t.N))return null}else{if(e.kind===t.kind)return null;if("value"===e.kind)for(const e of me)if(!ye(e,t))return null}return`Expected ${de(e)} but found ${de(t)} instead.`}function he(e,t){return t.some((t=>t.kind===e.kind))}function ge(e,t){return t.some((t=>"null"===t?null===e:"array"===t?Array.isArray(e):"object"===t?e&&!Array.isArray(e)&&"object"==typeof e:t===typeof e))}class ve{constructor(e,t,r){this.sensitivity=e?t?"variant":"case":t?"accent":"base",this.locale=r,this.collator=new Intl.Collator(this.locale?this.locale:[],{sensitivity:this.sensitivity,usage:"search"})}compare(e,t){return this.collator.compare(e,t)}resolvedLocale(){return new Intl.Collator(this.locale?this.locale:[]).resolvedOptions().locale}}class be{constructor(e,t,r,n,a){this.text=e.normalize?e.normalize():e,this.image=t,this.scale=r,this.fontStack=n,this.textColor=a}}class xe{constructor(e){this.sections=e}static fromString(e){return new xe([new be(e,null,null,null,null)])}isEmpty(){return 0===this.sections.length||!this.sections.some((e=>0!==e.text.length||e.image&&0!==e.image.name.length))}static factory(e){return e instanceof xe?e:xe.fromString(e)}toString(){return 0===this.sections.length?"":this.sections.map((e=>e.text)).join("")}serialize(){const e=["format"];for(const t of this.sections){if(t.image){e.push(["image",t.image.name]);continue}e.push(t.text);const r={};t.fontStack&&(r["text-font"]=["literal",t.fontStack.split(",")]),t.scale&&(r["font-scale"]=t.scale),t.textColor&&(r["text-color"]=["rgba"].concat(t.textColor.toArray())),e.push(r)}return e}}class we{constructor(e){this.name=e.name,this.available=e.available}toString(){return this.name}static fromString(e){return e?new we({name:e,available:!1}):null}serialize(){return["image",this.name]}}function ke(e,t,r,n){return"number"==typeof e&&e>=0&&e<=255&&"number"==typeof t&&t>=0&&t<=255&&"number"==typeof r&&r>=0&&r<=255?void 0===n||"number"==typeof n&&n>=0&&n<=1?null:`Invalid rgba value [${[e,t,r,n].join(", ")}]: 'a' must be between 0 and 1.`:`Invalid rgba value [${("number"==typeof n?[e,t,r,n]:[e,t,r]).join(", ")}]: 'r', 'g', and 'b' must be between 0 and 255.`}function ze(e){if(null===e)return!0;if("string"==typeof e)return!0;if("boolean"==typeof e)return!0;if("number"==typeof e)return!0;if(e instanceof V)return!0;if(e instanceof ve)return!0;if(e instanceof xe)return!0;if(e instanceof we)return!0;if(Array.isArray(e)){for(const t of e)if(!ze(t))return!1;return!0}if("object"==typeof e){for(const t in e)if(!ze(e[t]))return!1;return!0}return!1}function Ae(e){if(null===e)return re;if("string"==typeof e)return ae;if("boolean"==typeof e)return ie;if("number"==typeof e)return ne;if(e instanceof V)return oe;if(e instanceof ve)return ue;if(e instanceof xe)return pe;if(e instanceof we)return ce;if(Array.isArray(e)){const t=e.length;let r;for(const t of e){const e=Ae(t);if(r){if(r===e)continue;r=le;break}r=e}return fe(r||le,t)}return se}function Se(e){const t=typeof e;return null===e?"":"string"===t||"number"===t||"boolean"===t?String(e):e instanceof V||e instanceof xe||e instanceof we?e.toString():JSON.stringify(e)}class Me{constructor(e,t){this.type=e,this.value=t}static parse(e,t){if(2!==e.length)return t.error(`'literal' expression requires exactly one argument, but found ${e.length-1} instead.`);if(!ze(e[1]))return t.error("invalid value");const r=e[1];let n=Ae(r);const a=t.expectedType;return"array"!==n.kind||0!==n.N||!a||"array"!==a.kind||"number"==typeof a.N&&0!==a.N||(n=a),new Me(n,r)}evaluate(){return this.value}eachChild(){}outputDefined(){return!0}serialize(){return"array"===this.type.kind||"object"===this.type.kind?["literal",this.value]:this.value instanceof V?["rgba"].concat(this.value.toArray()):this.value instanceof xe?this.value.serialize():this.value}}var _e=Me,qe=class{constructor(e){this.name="ExpressionEvaluationError",this.message=e}toJSON(){return this.message}};const $e={string:ae,number:ne,boolean:ie,object:se};class Ce{constructor(e,t){this.type=e,this.args=t}static parse(e,t){if(e.length<2)return t.error("Expected at least one argument.");let r,n=1;const a=e[0];if("array"===a){let a,i;if(e.length>2){const r=e[1];if("string"!=typeof r||!(r in $e)||"object"===r)return t.error('The item type argument of "array" must be one of string, number, boolean',1);a=$e[r],n++}else a=le;if(e.length>3){if(null!==e[2]&&("number"!=typeof e[2]||e[2]<0||e[2]!==Math.floor(e[2])))return t.error('The length argument to "array" must be a positive integer literal',2);i=e[2],n++}r=fe(a,i)}else r=$e[a];const i=[];for(;n<e.length;n++){const r=t.parse(e[n],n,le);if(!r)return null;i.push(r)}return new Ce(r,i)}evaluate(e){for(let t=0;t<this.args.length;t++){const r=this.args[t].evaluate(e);if(!ye(this.type,Ae(r)))return r;if(t===this.args.length-1)throw new qe(`Expected value to be of type ${de(this.type)}, but found ${de(Ae(r))} instead.`)}return null}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every((e=>e.outputDefined()))}serialize(){const e=this.type,t=[e.kind];if("array"===e.kind){const r=e.itemType;if("string"===r.kind||"number"===r.kind||"boolean"===r.kind){t.push(r.kind);const n=e.N;("number"==typeof n||this.args.length>1)&&t.push(n)}}return t.concat(this.args.map((e=>e.serialize())))}}var Ee=Ce;class Te{constructor(e){this.type=pe,this.sections=e}static parse(e,t){if(e.length<2)return t.error("Expected at least one argument.");const r=e[1];if(!Array.isArray(r)&&"object"==typeof r)return t.error("First argument must be an image or text section.");const n=[];let a=!1;for(let r=1;r<=e.length-1;++r){const i=e[r];if(a&&"object"==typeof i&&!Array.isArray(i)){a=!1;let e=null;if(i["font-scale"]&&(e=t.parse(i["font-scale"],1,ne),!e))return null;let r=null;if(i["text-font"]&&(r=t.parse(i["text-font"],1,fe(ae)),!r))return null;let o=null;if(i["text-color"]&&(o=t.parse(i["text-color"],1,oe),!o))return null;const s=n[n.length-1];s.scale=e,s.font=r,s.textColor=o}else{const i=t.parse(e[r],1,le);if(!i)return null;const o=i.type.kind;if("string"!==o&&"value"!==o&&"null"!==o&&"resolvedImage"!==o)return t.error("Formatted text type must be 'string', 'value', 'image' or 'null'.");a=!0,n.push({content:i,scale:null,font:null,textColor:null})}}return new Te(n)}evaluate(e){return new xe(this.sections.map((t=>{const r=t.content.evaluate(e);return Ae(r)===ce?new be("",r,null,null,null):new be(Se(r),null,t.scale?t.scale.evaluate(e):null,t.font?t.font.evaluate(e).join(","):null,t.textColor?t.textColor.evaluate(e):null)})))}eachChild(e){for(const t of this.sections)e(t.content),t.scale&&e(t.scale),t.font&&e(t.font),t.textColor&&e(t.textColor)}outputDefined(){return!1}serialize(){const e=["format"];for(const t of this.sections){e.push(t.content.serialize());const r={};t.scale&&(r["font-scale"]=t.scale.serialize()),t.font&&(r["text-font"]=t.font.serialize()),t.textColor&&(r["text-color"]=t.textColor.serialize()),e.push(r)}return e}}class Ie{constructor(e){this.type=ce,this.input=e}static parse(e,t){if(2!==e.length)return t.error("Expected two arguments.");const r=t.parse(e[1],1,ae);return r?new Ie(r):t.error("No image name provided.")}evaluate(e){const t=this.input.evaluate(e),r=we.fromString(t);return r&&e.availableImages&&(r.available=e.availableImages.indexOf(t)>-1),r}eachChild(e){e(this.input)}outputDefined(){return!1}serialize(){return["image",this.input.serialize()]}}const je={"to-boolean":ie,"to-color":oe,"to-number":ne,"to-string":ae};class Fe{constructor(e,t){this.type=e,this.args=t}static parse(e,t){if(e.length<2)return t.error("Expected at least one argument.");const r=e[0];if(("to-boolean"===r||"to-string"===r)&&2!==e.length)return t.error("Expected one argument.");const n=je[r],a=[];for(let r=1;r<e.length;r++){const n=t.parse(e[r],r,le);if(!n)return null;a.push(n)}return new Fe(n,a)}evaluate(e){if("boolean"===this.type.kind)return Boolean(this.args[0].evaluate(e));if("color"===this.type.kind){let t,r;for(const n of this.args){if(t=n.evaluate(e),r=null,t instanceof V)return t;if("string"==typeof t){const r=e.parseColor(t);if(r)return r}else if(Array.isArray(t)&&(r=t.length<3||t.length>4?`Invalid rbga value ${JSON.stringify(t)}: expected an array containing either three or four numeric values.`:ke(t[0],t[1],t[2],t[3]),!r))return new V(t[0]/255,t[1]/255,t[2]/255,t[3])}throw new qe(r||`Could not parse color from value '${"string"==typeof t?t:String(JSON.stringify(t))}'`)}if("number"===this.type.kind){let t=null;for(const r of this.args){if(t=r.evaluate(e),null===t)return 0;const n=Number(t);if(!isNaN(n))return n}throw new qe(`Could not convert ${JSON.stringify(t)} to number.`)}return"formatted"===this.type.kind?xe.fromString(Se(this.args[0].evaluate(e))):"resolvedImage"===this.type.kind?we.fromString(Se(this.args[0].evaluate(e))):Se(this.args[0].evaluate(e))}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every((e=>e.outputDefined()))}serialize(){if("formatted"===this.type.kind)return new Te([{content:this.args[0],scale:null,font:null,textColor:null}]).serialize();if("resolvedImage"===this.type.kind)return new Ie(this.args[0]).serialize();const e=[`to-${this.type.kind}`];return this.eachChild((t=>{e.push(t.serialize())})),e}}var Pe=Fe;const De=["Unknown","Point","LineString","Polygon"];var Re=class{constructor(){this.globals=null,this.feature=null,this.featureState=null,this.formattedSection=null,this._parseColorCache={},this.availableImages=null,this.canonical=null,this.featureTileCoord=null,this.featureDistanceData=null}id(){return this.feature&&void 0!==this.feature.id?this.feature.id:null}geometryType(){return this.feature?"number"==typeof this.feature.type?De[this.feature.type]:this.feature.type:null}geometry(){return this.feature&&"geometry"in this.feature?this.feature.geometry:null}canonicalID(){return this.canonical}properties(){return this.feature&&this.feature.properties||{}}distanceFromCenter(){if(this.featureTileCoord&&this.featureDistanceData){const e=this.featureDistanceData.center,t=this.featureDistanceData.scale,{x:r,y:n}=this.featureTileCoord,a=r*t-e[0],i=n*t-e[1];return this.featureDistanceData.bearing[0]*a+this.featureDistanceData.bearing[1]*i}return 0}parseColor(e){let t=this._parseColorCache[e];return t||(t=this._parseColorCache[e]=V.parse(e)),t}};class Oe{constructor(e,t,r,n){this.name=e,this.type=t,this._evaluate=r,this.args=n}evaluate(e){return this._evaluate(e,this.args)}eachChild(e){this.args.forEach(e)}outputDefined(){return!1}serialize(){return[this.name].concat(this.args.map((e=>e.serialize())))}static parse(e,t){const r=e[0],n=Oe.definitions[r];if(!n)return t.error(`Unknown expression "${r}". If you wanted a literal array, use ["literal", [...]].`,0);const a=Array.isArray(n)?n[0]:n.type,i=Array.isArray(n)?[[n[1],n[2]]]:n.overloads,o=i.filter((([t])=>!Array.isArray(t)||t.length===e.length-1));let s=null;for(const[n,i]of o){s=new dt(t.registry,t.path,null,t.scope);const o=[];let l=!1;for(let t=1;t<e.length;t++){const r=e[t],a=Array.isArray(n)?n[t-1]:n.type,i=s.parse(r,1+o.length,a);if(!i){l=!0;break}o.push(i)}if(!l)if(Array.isArray(n)&&n.length!==o.length)s.error(`Expected ${n.length} arguments, but found ${o.length} instead.`);else{for(let e=0;e<o.length;e++){const t=Array.isArray(n)?n[e]:n.type,r=o[e];s.concat(e+1).checkSubtype(t,r.type)}if(0===s.errors.length)return new Oe(r,a,i,o)}}if(1===o.length)t.errors.push(...s.errors);else{const r=(o.length?o:i).map((([e])=>{return t=e,Array.isArray(t)?`(${t.map(de).join(", ")})`:`(${de(t.type)}...)`;var t})).join(" | "),n=[];for(let r=1;r<e.length;r++){const a=t.parse(e[r],1+n.length);if(!a)return null;n.push(de(a.type))}t.error(`Expected arguments of type ${r}, but found (${n.join(", ")}) instead.`)}return null}static register(e,t){Oe.definitions=t;for(const r in t)e[r]=Oe}}var Ne=Oe;class Le{constructor(e,t,r){this.type=ue,this.locale=r,this.caseSensitive=e,this.diacriticSensitive=t}static parse(e,t){if(2!==e.length)return t.error("Expected one argument.");const r=e[1];if("object"!=typeof r||Array.isArray(r))return t.error("Collator options argument must be an object.");const n=t.parse(void 0!==r["case-sensitive"]&&r["case-sensitive"],1,ie);if(!n)return null;const a=t.parse(void 0!==r["diacritic-sensitive"]&&r["diacritic-sensitive"],1,ie);if(!a)return null;let i=null;return r.locale&&(i=t.parse(r.locale,1,ae),!i)?null:new Le(n,a,i)}evaluate(e){return new ve(this.caseSensitive.evaluate(e),this.diacriticSensitive.evaluate(e),this.locale?this.locale.evaluate(e):null)}eachChild(e){e(this.caseSensitive),e(this.diacriticSensitive),this.locale&&e(this.locale)}outputDefined(){return!1}serialize(){const e={};return e["case-sensitive"]=this.caseSensitive.serialize(),e["diacritic-sensitive"]=this.diacriticSensitive.serialize(),this.locale&&(e.locale=this.locale.serialize()),["collator",e]}}const Ue=8192;function Ve(e,t){e[0]=Math.min(e[0],t[0]),e[1]=Math.min(e[1],t[1]),e[2]=Math.max(e[2],t[0]),e[3]=Math.max(e[3],t[1])}function Ge(e,t){return!(e[0]<=t[0]||e[2]>=t[2]||e[1]<=t[1]||e[3]>=t[3])}function Je(e,t){const r=(180+e[0])/360,n=(a=e[1],(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+a*Math.PI/360)))/360);var a;const i=Math.pow(2,t.z);return[Math.round(r*i*Ue),Math.round(n*i*Ue)]}function We(e,t,r){const n=e[0]-t[0],a=e[1]-t[1],i=e[0]-r[0],o=e[1]-r[1];return n*o-i*a==0&&n*i<=0&&a*o<=0}function Ze(e,t){let r=!1;for(let o=0,s=t.length;o<s;o++){const s=t[o];for(let t=0,o=s.length;t<o-1;t++){if(We(e,s[t],s[t+1]))return!1;n=e,a=s[t],i=s[t+1],a[1]>n[1]!=i[1]>n[1]&&n[0]<(i[0]-a[0])*(n[1]-a[1])/(i[1]-a[1])+a[0]&&(r=!r)}}var n,a,i;return r}function Xe(e,t){for(let r=0;r<t.length;r++)if(Ze(e,t[r]))return!0;return!1}function Be(e,t,r,n){const a=e[0]-r[0],i=e[1]-r[1],o=t[0]-r[0],s=t[1]-r[1],l=n[0]-r[0],u=n[1]-r[1],p=a*u-l*i,c=o*u-l*s;return p>0&&c<0||p<0&&c>0}function Ye(e,t,r,n){const a=[t[0]-e[0],t[1]-e[1]];return 0!=(i=[n[0]-r[0],n[1]-r[1]])[0]*(o=a)[1]-i[1]*o[0]&&!(!Be(e,t,r,n)||!Be(r,n,e,t));var i,o}function He(e,t,r){for(const n of r)for(let r=0;r<n.length-1;++r)if(Ye(e,t,n[r],n[r+1]))return!0;return!1}function Ke(e,t){for(let r=0;r<e.length;++r)if(!Ze(e[r],t))return!1;for(let r=0;r<e.length-1;++r)if(He(e[r],e[r+1],t))return!1;return!0}function Qe(e,t){for(let r=0;r<t.length;r++)if(Ke(e,t[r]))return!0;return!1}function et(e,t,r){const n=[];for(let a=0;a<e.length;a++){const i=[];for(let n=0;n<e[a].length;n++){const o=Je(e[a][n],r);Ve(t,o),i.push(o)}n.push(i)}return n}function tt(e,t,r){const n=[];for(let a=0;a<e.length;a++){const i=et(e[a],t,r);n.push(i)}return n}function rt(e,t,r,n){if(e[0]<r[0]||e[0]>r[2]){const t=.5*n;let a=e[0]-r[0]>t?-n:r[0]-e[0]>t?n:0;0===a&&(a=e[0]-r[2]>t?-n:r[2]-e[0]>t?n:0),e[0]+=a}Ve(t,e)}function nt(e,t,r,n){const a=Math.pow(2,n.z)*Ue,i=[n.x*Ue,n.y*Ue],o=[];if(!e)return o;for(const n of e)for(const e of n){const n=[e.x+i[0],e.y+i[1]];rt(n,t,r,a),o.push(n)}return o}function at(e,t,r,n){const a=Math.pow(2,n.z)*Ue,i=[n.x*Ue,n.y*Ue],o=[];if(!e)return o;for(const r of e){const e=[];for(const n of r){const r=[n.x+i[0],n.y+i[1]];Ve(t,r),e.push(r)}o.push(e)}if(t[2]-t[0]<=a/2){(s=t)[0]=s[1]=1/0,s[2]=s[3]=-1/0;for(const e of o)for(const n of e)rt(n,t,r,a)}var s;return o}class it{constructor(e,t){this.type=ie,this.geojson=e,this.geometries=t}static parse(e,t){if(2!==e.length)return t.error(`'within' expression requires exactly one argument, but found ${e.length-1} instead.`);if(ze(e[1])){const t=e[1];if("FeatureCollection"===t.type)for(let e=0;e<t.features.length;++e){const r=t.features[e].geometry.type;if("Polygon"===r||"MultiPolygon"===r)return new it(t,t.features[e].geometry)}else if("Feature"===t.type){const e=t.geometry.type;if("Polygon"===e||"MultiPolygon"===e)return new it(t,t.geometry)}else if("Polygon"===t.type||"MultiPolygon"===t.type)return new it(t,t)}return t.error("'within' expression requires valid geojson object that contains polygon geometry type.")}evaluate(e){if(null!=e.geometry()&&null!=e.canonicalID()){if("Point"===e.geometryType())return function(e,t){const r=[1/0,1/0,-1/0,-1/0],n=[1/0,1/0,-1/0,-1/0],a=e.canonicalID();if(!a)return!1;if("Polygon"===t.type){const i=et(t.coordinates,n,a),o=nt(e.geometry(),r,n,a);if(!Ge(r,n))return!1;for(const e of o)if(!Ze(e,i))return!1}if("MultiPolygon"===t.type){const i=tt(t.coordinates,n,a),o=nt(e.geometry(),r,n,a);if(!Ge(r,n))return!1;for(const e of o)if(!Xe(e,i))return!1}return!0}(e,this.geometries);if("LineString"===e.geometryType())return function(e,t){const r=[1/0,1/0,-1/0,-1/0],n=[1/0,1/0,-1/0,-1/0],a=e.canonicalID();if(!a)return!1;if("Polygon"===t.type){const i=et(t.coordinates,n,a),o=at(e.geometry(),r,n,a);if(!Ge(r,n))return!1;for(const e of o)if(!Ke(e,i))return!1}if("MultiPolygon"===t.type){const i=tt(t.coordinates,n,a),o=at(e.geometry(),r,n,a);if(!Ge(r,n))return!1;for(const e of o)if(!Qe(e,i))return!1}return!0}(e,this.geometries)}return!1}eachChild(){}outputDefined(){return!0}serialize(){return["within",this.geojson]}}var ot=it;function st(e){if(e instanceof Ne){if("get"===e.name&&1===e.args.length)return!1;if("feature-state"===e.name)return!1;if("has"===e.name&&1===e.args.length)return!1;if("properties"===e.name||"geometry-type"===e.name||"id"===e.name)return!1;if(/^filter-/.test(e.name))return!1}if(e instanceof ot)return!1;let t=!0;return e.eachChild((e=>{t&&!st(e)&&(t=!1)})),t}function lt(e){if(e instanceof Ne&&"feature-state"===e.name)return!1;let t=!0;return e.eachChild((e=>{t&&!lt(e)&&(t=!1)})),t}function ut(e,t){if(e instanceof Ne&&t.indexOf(e.name)>=0)return!1;let r=!0;return e.eachChild((e=>{r&&!ut(e,t)&&(r=!1)})),r}class pt{constructor(e,t){this.type=t.type,this.name=e,this.boundExpression=t}static parse(e,t){if(2!==e.length||"string"!=typeof e[1])return t.error("'var' expression requires exactly one string literal argument.");const r=e[1];return t.scope.has(r)?new pt(r,t.scope.get(r)):t.error(`Unknown variable "${r}". Make sure "${r}" has been bound in an enclosing "let" expression before using it.`,1)}evaluate(e){return this.boundExpression.evaluate(e)}eachChild(){}outputDefined(){return!1}serialize(){return["var",this.name]}}var ct=pt;class ft{constructor(e,t=[],r,n=new te,a=[]){this.registry=e,this.path=t,this.key=t.map((e=>`[${e}]`)).join(""),this.scope=n,this.errors=a,this.expectedType=r}parse(e,t,r,n,a={}){return t?this.concat(t,r,n)._parse(e,a):this._parse(e,a)}_parse(e,t){function r(e,t,r){return"assert"===r?new Ee(t,[e]):"coerce"===r?new Pe(t,[e]):e}if(null!==e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e||(e=["literal",e]),Array.isArray(e)){if(0===e.length)return this.error('Expected an array with at least one element. If you wanted a literal array, use ["literal", []].');const n=e[0];if("string"!=typeof n)return this.error(`Expression name must be a string, but found ${typeof n} instead. If you wanted a literal array, use ["literal", [...]].`,0),null;const a=this.registry[n];if(a){let n=a.parse(e,this);if(!n)return null;if(this.expectedType){const e=this.expectedType,a=n.type;if("string"!==e.kind&&"number"!==e.kind&&"boolean"!==e.kind&&"object"!==e.kind&&"array"!==e.kind||"value"!==a.kind)if("color"!==e.kind&&"formatted"!==e.kind&&"resolvedImage"!==e.kind||"value"!==a.kind&&"string"!==a.kind){if(this.checkSubtype(e,a))return null}else n=r(n,e,t.typeAnnotation||"coerce");else n=r(n,e,t.typeAnnotation||"assert")}if(!(n instanceof _e)&&"resolvedImage"!==n.type.kind&&mt(n)){const e=new Re;try{n=new _e(n.type,n.evaluate(e))}catch(e){return this.error(e.message),null}}return n}return this.error(`Unknown expression "${n}". If you wanted a literal array, use ["literal", [...]].`,0)}return void 0===e?this.error("'undefined' value invalid. Use null instead."):"object"==typeof e?this.error('Bare objects invalid. Use ["literal", {...}] instead.'):this.error(`Expected an array, but found ${typeof e} instead.`)}concat(e,t,r){const n="number"==typeof e?this.path.concat(e):this.path,a=r?this.scope.concat(r):this.scope;return new ft(this.registry,n,t||null,a,this.errors)}error(e,...t){const r=`${this.key}${t.map((e=>`[${e}]`)).join("")}`;this.errors.push(new Q(r,e))}checkSubtype(e,t){const r=ye(e,t);return r&&this.error(r),r}}var dt=ft;function mt(e){if(e instanceof ct)return mt(e.boundExpression);if(e instanceof Ne&&"error"===e.name)return!1;if(e instanceof Le)return!1;if(e instanceof ot)return!1;const t=e instanceof Pe||e instanceof Ee;let r=!0;return e.eachChild((e=>{r=t?r&&mt(e):r&&e instanceof _e})),!!r&&st(e)&&ut(e,["zoom","heatmap-density","line-progress","sky-radial-progress","accumulated","is-supported-script","pitch","distance-from-center"])}function yt(e,t){const r=e.length-1;let n,a,i=0,o=r,s=0;for(;i<=o;)if(s=Math.floor((i+o)/2),n=e[s],a=e[s+1],n<=t){if(s===r||t<a)return s;i=s+1}else{if(!(n>t))throw new qe("Input is not a number.");o=s-1}return 0}class ht{constructor(e,t,r){this.type=e,this.input=t,this.labels=[],this.outputs=[];for(const[e,t]of r)this.labels.push(e),this.outputs.push(t)}static parse(e,t){if(e.length-1<4)return t.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if((e.length-1)%2!=0)return t.error("Expected an even number of arguments.");const r=t.parse(e[1],1,ne);if(!r)return null;const n=[];let a=null;t.expectedType&&"value"!==t.expectedType.kind&&(a=t.expectedType);for(let r=1;r<e.length;r+=2){const i=1===r?-1/0:e[r],o=e[r+1],s=r,l=r+1;if("number"!=typeof i)return t.error('Input/output pairs for "step" expressions must be defined using literal numeric values (not computed expressions) for the input values.',s);if(n.length&&n[n.length-1][0]>=i)return t.error('Input/output pairs for "step" expressions must be arranged with input values in strictly ascending order.',s);const u=t.parse(o,l,a);if(!u)return null;a=a||u.type,n.push([i,u])}return new ht(a,r,n)}evaluate(e){const t=this.labels,r=this.outputs;if(1===t.length)return r[0].evaluate(e);const n=this.input.evaluate(e);if(n<=t[0])return r[0].evaluate(e);const a=t.length;return n>=t[a-1]?r[a-1].evaluate(e):r[yt(t,n)].evaluate(e)}eachChild(e){e(this.input);for(const t of this.outputs)e(t)}outputDefined(){return this.outputs.every((e=>e.outputDefined()))}serialize(){const e=["step",this.input.serialize()];for(let t=0;t<this.labels.length;t++)t>0&&e.push(this.labels[t]),e.push(this.outputs[t].serialize());return e}}var gt=ht,vt=bt;function bt(e,t,r,n){this.cx=3*e,this.bx=3*(r-e)-this.cx,this.ax=1-this.cx-this.bx,this.cy=3*t,this.by=3*(n-t)-this.cy,this.ay=1-this.cy-this.by,this.p1x=e,this.p1y=n,this.p2x=r,this.p2y=n}bt.prototype.sampleCurveX=function(e){return((this.ax*e+this.bx)*e+this.cx)*e},bt.prototype.sampleCurveY=function(e){return((this.ay*e+this.by)*e+this.cy)*e},bt.prototype.sampleCurveDerivativeX=function(e){return(3*this.ax*e+2*this.bx)*e+this.cx},bt.prototype.solveCurveX=function(e,t){var r,n,a,i,o;for(void 0===t&&(t=1e-6),a=e,o=0;o<8;o++){if(i=this.sampleCurveX(a)-e,Math.abs(i)<t)return a;var s=this.sampleCurveDerivativeX(a);if(Math.abs(s)<1e-6)break;a-=i/s}if((a=e)<(r=0))return r;if(a>(n=1))return n;for(;r<n;){if(i=this.sampleCurveX(a),Math.abs(i-e)<t)return a;e>i?r=a:n=a,a=.5*(n-r)+r}return a},bt.prototype.solve=function(e,t){return this.sampleCurveY(this.solveCurveX(e,t))};var xt=j(vt);function wt(e,t,r){return e*(1-r)+t*r}var kt=Object.freeze({__proto__:null,number:wt,color:function(e,t,r){return new V(wt(e.r,t.r,r),wt(e.g,t.g,r),wt(e.b,t.b,r),wt(e.a,t.a,r))},array:function(e,t,r){return e.map(((e,n)=>wt(e,t[n],r)))}});const zt=.95047,At=1.08883,St=4/29,Mt=6/29,_t=3*Mt*Mt,qt=Mt*Mt*Mt,$t=Math.PI/180,Ct=180/Math.PI;function Et(e){return e>qt?Math.pow(e,1/3):e/_t+St}function Tt(e){return e>Mt?e*e*e:_t*(e-St)}function It(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function jt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function Ft(e){const t=jt(e.r),r=jt(e.g),n=jt(e.b),a=Et((.4124564*t+.3575761*r+.1804375*n)/zt),i=Et((.2126729*t+.7151522*r+.072175*n)/1);return{l:116*i-16,a:500*(a-i),b:200*(i-Et((.0193339*t+.119192*r+.9503041*n)/At)),alpha:e.a}}function Pt(e){let t=(e.l+16)/116,r=isNaN(e.a)?t:t+e.a/500,n=isNaN(e.b)?t:t-e.b/200;return t=1*Tt(t),r=zt*Tt(r),n=At*Tt(n),new V(It(3.2404542*r-1.5371385*t-.4985314*n),It(-.969266*r+1.8760108*t+.041556*n),It(.0556434*r-.2040259*t+1.0572252*n),e.alpha)}function Dt(e,t,r){const n=t-e;return e+r*(n>180||n<-180?n-360*Math.round(n/360):n)}const Rt={forward:Ft,reverse:Pt,interpolate:function(e,t,r){return{l:wt(e.l,t.l,r),a:wt(e.a,t.a,r),b:wt(e.b,t.b,r),alpha:wt(e.alpha,t.alpha,r)}}},Ot=function(e){const{l:t,a:r,b:n}=Ft(e),a=Math.atan2(n,r)*Ct;return{h:a<0?a+360:a,c:Math.sqrt(r*r+n*n),l:t,alpha:e.a}},Nt=function(e){const t=e.h*$t,r=e.c;return Pt({l:e.l,a:Math.cos(t)*r,b:Math.sin(t)*r,alpha:e.alpha})},Lt=function(e,t,r){return{h:Dt(e.h,t.h,r),c:wt(e.c,t.c,r),l:wt(e.l,t.l,r),alpha:wt(e.alpha,t.alpha,r)}};class Ut{constructor(e,t,r,n,a){this.type=e,this.operator=t,this.interpolation=r,this.input=n,this.labels=[],this.outputs=[];for(const[e,t]of a)this.labels.push(e),this.outputs.push(t)}static interpolationFactor(e,t,r,n){let a=0;if("exponential"===e.name)a=Vt(t,e.base,r,n);else if("linear"===e.name)a=Vt(t,1,r,n);else if("cubic-bezier"===e.name){const i=e.controlPoints;a=new xt(i[0],i[1],i[2],i[3]).solve(Vt(t,1,r,n))}return a}static parse(e,t){let[r,n,a,...i]=e;if(!Array.isArray(n)||0===n.length)return t.error("Expected an interpolation type expression.",1);if("linear"===n[0])n={name:"linear"};else if("exponential"===n[0]){const e=n[1];if("number"!=typeof e)return t.error("Exponential interpolation requires a numeric base.",1,1);n={name:"exponential",base:e}}else{if("cubic-bezier"!==n[0])return t.error(`Unknown interpolation type ${String(n[0])}`,1,0);{const e=n.slice(1);if(4!==e.length||e.some((e=>"number"!=typeof e||e<0||e>1)))return t.error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.",1);n={name:"cubic-bezier",controlPoints:e}}}if(e.length-1<4)return t.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if((e.length-1)%2!=0)return t.error("Expected an even number of arguments.");if(a=t.parse(a,2,ne),!a)return null;const o=[];let s=null;"interpolate-hcl"===r||"interpolate-lab"===r?s=oe:t.expectedType&&"value"!==t.expectedType.kind&&(s=t.expectedType);for(let e=0;e<i.length;e+=2){const r=i[e],n=i[e+1],a=e+3,l=e+4;if("number"!=typeof r)return t.error('Input/output pairs for "interpolate" expressions must be defined using literal numeric values (not computed expressions) for the input values.',a);if(o.length&&o[o.length-1][0]>=r)return t.error('Input/output pairs for "interpolate" expressions must be arranged with input values in strictly ascending order.',a);const u=t.parse(n,l,s);if(!u)return null;s=s||u.type,o.push([r,u])}return"number"===s.kind||"color"===s.kind||"array"===s.kind&&"number"===s.itemType.kind&&"number"==typeof s.N?new Ut(s,r,n,a,o):t.error(`Type ${de(s)} is not interpolatable.`)}evaluate(e){const t=this.labels,r=this.outputs;if(1===t.length)return r[0].evaluate(e);const n=this.input.evaluate(e);if(n<=t[0])return r[0].evaluate(e);const a=t.length;if(n>=t[a-1])return r[a-1].evaluate(e);const i=yt(t,n),o=t[i],s=t[i+1],l=Ut.interpolationFactor(this.interpolation,n,o,s),u=r[i].evaluate(e),p=r[i+1].evaluate(e);return"interpolate"===this.operator?kt[this.type.kind.toLowerCase()](u,p,l):"interpolate-hcl"===this.operator?Nt(Lt(Ot(u),Ot(p),l)):Rt.reverse(Rt.interpolate(Rt.forward(u),Rt.forward(p),l))}eachChild(e){e(this.input);for(const t of this.outputs)e(t)}outputDefined(){return this.outputs.every((e=>e.outputDefined()))}serialize(){let e;e="linear"===this.interpolation.name?["linear"]:"exponential"===this.interpolation.name?1===this.interpolation.base?["linear"]:["exponential",this.interpolation.base]:["cubic-bezier"].concat(this.interpolation.controlPoints);const t=[this.operator,e,this.input.serialize()];for(let e=0;e<this.labels.length;e++)t.push(this.labels[e],this.outputs[e].serialize());return t}}function Vt(e,t,r,n){const a=n-r,i=e-r;return 0===a?0:1===t?i/a:(Math.pow(t,i)-1)/(Math.pow(t,a)-1)}var Gt=Ut;class Jt{constructor(e,t){this.type=e,this.args=t}static parse(e,t){if(e.length<2)return t.error("Expectected at least one argument.");let r=null;const n=t.expectedType;n&&"value"!==n.kind&&(r=n);const a=[];for(const n of e.slice(1)){const e=t.parse(n,1+a.length,r,void 0,{typeAnnotation:"omit"});if(!e)return null;r=r||e.type,a.push(e)}const i=n&&a.some((e=>ye(n,e.type)));return new Jt(i?le:r,a)}evaluate(e){let t,r=null,n=0;for(const a of this.args){if(n++,r=a.evaluate(e),r&&r instanceof we&&!r.available&&(t||(t=r),r=null,n===this.args.length))return t;if(null!==r)break}return r}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every((e=>e.outputDefined()))}serialize(){const e=["coalesce"];return this.eachChild((t=>{e.push(t.serialize())})),e}}var Wt=Jt;class Zt{constructor(e,t){this.type=t.type,this.bindings=[].concat(e),this.result=t}evaluate(e){return this.result.evaluate(e)}eachChild(e){for(const t of this.bindings)e(t[1]);e(this.result)}static parse(e,t){if(e.length<4)return t.error(`Expected at least 3 arguments, but found ${e.length-1} instead.`);const r=[];for(let n=1;n<e.length-1;n+=2){const a=e[n];if("string"!=typeof a)return t.error(`Expected string, but found ${typeof a} instead.`,n);if(/[^a-zA-Z0-9_]/.test(a))return t.error("Variable names must contain only alphanumeric characters or '_'.",n);const i=t.parse(e[n+1],n+1);if(!i)return null;r.push([a,i])}const n=t.parse(e[e.length-1],e.length-1,t.expectedType,r);return n?new Zt(r,n):null}outputDefined(){return this.result.outputDefined()}serialize(){const e=["let"];for(const[t,r]of this.bindings)e.push(t,r.serialize());return e.push(this.result.serialize()),e}}var Xt=Zt;class Bt{constructor(e,t,r){this.type=e,this.index=t,this.input=r}static parse(e,t){if(3!==e.length)return t.error(`Expected 2 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,ne),n=t.parse(e[2],2,fe(t.expectedType||le));if(!r||!n)return null;const a=n.type;return new Bt(a.itemType,r,n)}evaluate(e){const t=this.index.evaluate(e),r=this.input.evaluate(e);if(t<0)throw new qe(`Array index out of bounds: ${t} < 0.`);if(t>=r.length)throw new qe(`Array index out of bounds: ${t} > ${r.length-1}.`);if(t!==Math.floor(t))throw new qe(`Array index must be an integer, but found ${t} instead.`);return r[t]}eachChild(e){e(this.index),e(this.input)}outputDefined(){return!1}serialize(){return["at",this.index.serialize(),this.input.serialize()]}}var Yt=Bt;class Ht{constructor(e,t){this.type=ie,this.needle=e,this.haystack=t}static parse(e,t){if(3!==e.length)return t.error(`Expected 2 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,le),n=t.parse(e[2],2,le);return r&&n?he(r.type,[ie,ae,ne,re,le])?new Ht(r,n):t.error(`Expected first argument to be of type boolean, string, number or null, but found ${de(r.type)} instead`):null}evaluate(e){const t=this.needle.evaluate(e),r=this.haystack.evaluate(e);if(null==r)return!1;if(!ge(t,["boolean","string","number","null"]))throw new qe(`Expected first argument to be of type boolean, string, number or null, but found ${de(Ae(t))} instead.`);if(!ge(r,["string","array"]))throw new qe(`Expected second argument to be of type array or string, but found ${de(Ae(r))} instead.`);return r.indexOf(t)>=0}eachChild(e){e(this.needle),e(this.haystack)}outputDefined(){return!0}serialize(){return["in",this.needle.serialize(),this.haystack.serialize()]}}var Kt=Ht;class Qt{constructor(e,t,r){this.type=ne,this.needle=e,this.haystack=t,this.fromIndex=r}static parse(e,t){if(e.length<=2||e.length>=5)return t.error(`Expected 3 or 4 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,le),n=t.parse(e[2],2,le);if(!r||!n)return null;if(!he(r.type,[ie,ae,ne,re,le]))return t.error(`Expected first argument to be of type boolean, string, number or null, but found ${de(r.type)} instead`);if(4===e.length){const a=t.parse(e[3],3,ne);return a?new Qt(r,n,a):null}return new Qt(r,n)}evaluate(e){const t=this.needle.evaluate(e),r=this.haystack.evaluate(e);if(!ge(t,["boolean","string","number","null"]))throw new qe(`Expected first argument to be of type boolean, string, number or null, but found ${de(Ae(t))} instead.`);if(!ge(r,["string","array"]))throw new qe(`Expected second argument to be of type array or string, but found ${de(Ae(r))} instead.`);if(this.fromIndex){const n=this.fromIndex.evaluate(e);return r.indexOf(t,n)}return r.indexOf(t)}eachChild(e){e(this.needle),e(this.haystack),this.fromIndex&&e(this.fromIndex)}outputDefined(){return!1}serialize(){if(null!=this.fromIndex&&void 0!==this.fromIndex){const e=this.fromIndex.serialize();return["index-of",this.needle.serialize(),this.haystack.serialize(),e]}return["index-of",this.needle.serialize(),this.haystack.serialize()]}}var er=Qt;class tr{constructor(e,t,r,n,a,i){this.inputType=e,this.type=t,this.input=r,this.cases=n,this.outputs=a,this.otherwise=i}static parse(e,t){if(e.length<5)return t.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if(e.length%2!=1)return t.error("Expected an even number of arguments.");let r,n;t.expectedType&&"value"!==t.expectedType.kind&&(n=t.expectedType);const a={},i=[];for(let o=2;o<e.length-1;o+=2){let s=e[o];const l=e[o+1];Array.isArray(s)||(s=[s]);const u=t.concat(o);if(0===s.length)return u.error("Expected at least one branch label.");for(const e of s){if("number"!=typeof e&&"string"!=typeof e)return u.error("Branch labels must be numbers or strings.");if("number"==typeof e&&Math.abs(e)>Number.MAX_SAFE_INTEGER)return u.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);if("number"==typeof e&&Math.floor(e)!==e)return u.error("Numeric branch labels must be integer values.");if(r){if(u.checkSubtype(r,Ae(e)))return null}else r=Ae(e);if(void 0!==a[String(e)])return u.error("Branch labels must be unique.");a[String(e)]=i.length}const p=t.parse(l,o,n);if(!p)return null;n=n||p.type,i.push(p)}const o=t.parse(e[1],1,le);if(!o)return null;const s=t.parse(e[e.length-1],e.length-1,n);return s?"value"!==o.type.kind&&t.concat(1).checkSubtype(r,o.type)?null:new tr(r,n,o,a,i,s):null}evaluate(e){const t=this.input.evaluate(e);return(Ae(t)===this.inputType&&this.outputs[this.cases[t]]||this.otherwise).evaluate(e)}eachChild(e){e(this.input),this.outputs.forEach(e),e(this.otherwise)}outputDefined(){return this.outputs.every((e=>e.outputDefined()))&&this.otherwise.outputDefined()}serialize(){const e=["match",this.input.serialize()],t=Object.keys(this.cases).sort(),r=[],n={};for(const e of t){const t=n[this.cases[e]];void 0===t?(n[this.cases[e]]=r.length,r.push([this.cases[e],[e]])):r[t][1].push(e)}const a=e=>"number"===this.inputType.kind?Number(e):e;for(const[t,n]of r)1===n.length?e.push(a(n[0])):e.push(n.map(a)),e.push(this.outputs[t].serialize());return e.push(this.otherwise.serialize()),e}}var rr=tr;class nr{constructor(e,t,r){this.type=e,this.branches=t,this.otherwise=r}static parse(e,t){if(e.length<4)return t.error(`Expected at least 3 arguments, but found only ${e.length-1}.`);if(e.length%2!=0)return t.error("Expected an odd number of arguments.");let r;t.expectedType&&"value"!==t.expectedType.kind&&(r=t.expectedType);const n=[];for(let a=1;a<e.length-1;a+=2){const i=t.parse(e[a],a,ie);if(!i)return null;const o=t.parse(e[a+1],a+1,r);if(!o)return null;n.push([i,o]),r=r||o.type}const a=t.parse(e[e.length-1],e.length-1,r);return a?new nr(r,n,a):null}evaluate(e){for(const[t,r]of this.branches)if(t.evaluate(e))return r.evaluate(e);return this.otherwise.evaluate(e)}eachChild(e){for(const[t,r]of this.branches)e(t),e(r);e(this.otherwise)}outputDefined(){return this.branches.every((([e,t])=>t.outputDefined()))&&this.otherwise.outputDefined()}serialize(){const e=["case"];return this.eachChild((t=>{e.push(t.serialize())})),e}}var ar=nr;class ir{constructor(e,t,r,n){this.type=e,this.input=t,this.beginIndex=r,this.endIndex=n}static parse(e,t){if(e.length<=2||e.length>=5)return t.error(`Expected 3 or 4 arguments, but found ${e.length-1} instead.`);const r=t.parse(e[1],1,le),n=t.parse(e[2],2,ne);if(!r||!n)return null;if(!he(r.type,[fe(le),ae,le]))return t.error(`Expected first argument to be of type array or string, but found ${de(r.type)} instead`);if(4===e.length){const a=t.parse(e[3],3,ne);return a?new ir(r.type,r,n,a):null}return new ir(r.type,r,n)}evaluate(e){const t=this.input.evaluate(e),r=this.beginIndex.evaluate(e);if(!ge(t,["string","array"]))throw new qe(`Expected first argument to be of type array or string, but found ${de(Ae(t))} instead.`);if(this.endIndex){const n=this.endIndex.evaluate(e);return t.slice(r,n)}return t.slice(r)}eachChild(e){e(this.input),e(this.beginIndex),this.endIndex&&e(this.endIndex)}outputDefined(){return!1}serialize(){if(null!=this.endIndex&&void 0!==this.endIndex){const e=this.endIndex.serialize();return["slice",this.input.serialize(),this.beginIndex.serialize(),e]}return["slice",this.input.serialize(),this.beginIndex.serialize()]}}var or=ir;function sr(e,t){return"=="===e||"!="===e?"boolean"===t.kind||"string"===t.kind||"number"===t.kind||"null"===t.kind||"value"===t.kind:"string"===t.kind||"number"===t.kind||"value"===t.kind}function lr(e,t,r,n){return 0===n.compare(t,r)}function ur(e,t,r){const n="=="!==e&&"!="!==e;return class a{constructor(e,t,r){this.type=ie,this.lhs=e,this.rhs=t,this.collator=r,this.hasUntypedArgument="value"===e.type.kind||"value"===t.type.kind}static parse(e,t){if(3!==e.length&&4!==e.length)return t.error("Expected two or three arguments.");const r=e[0];let i=t.parse(e[1],1,le);if(!i)return null;if(!sr(r,i.type))return t.concat(1).error(`"${r}" comparisons are not supported for type '${de(i.type)}'.`);let o=t.parse(e[2],2,le);if(!o)return null;if(!sr(r,o.type))return t.concat(2).error(`"${r}" comparisons are not supported for type '${de(o.type)}'.`);if(i.type.kind!==o.type.kind&&"value"!==i.type.kind&&"value"!==o.type.kind)return t.error(`Cannot compare types '${de(i.type)}' and '${de(o.type)}'.`);n&&("value"===i.type.kind&&"value"!==o.type.kind?i=new Ee(o.type,[i]):"value"!==i.type.kind&&"value"===o.type.kind&&(o=new Ee(i.type,[o])));let s=null;if(4===e.length){if("string"!==i.type.kind&&"string"!==o.type.kind&&"value"!==i.type.kind&&"value"!==o.type.kind)return t.error("Cannot use collator to compare non-string types.");if(s=t.parse(e[3],3,ue),!s)return null}return new a(i,o,s)}evaluate(a){const i=this.lhs.evaluate(a),o=this.rhs.evaluate(a);if(n&&this.hasUntypedArgument){const t=Ae(i),r=Ae(o);if(t.kind!==r.kind||"string"!==t.kind&&"number"!==t.kind)throw new qe(`Expected arguments for "${e}" to be (string, string) or (number, number), but found (${t.kind}, ${r.kind}) instead.`)}if(this.collator&&!n&&this.hasUntypedArgument){const e=Ae(i),r=Ae(o);if("string"!==e.kind||"string"!==r.kind)return t(a,i,o)}return this.collator?r(a,i,o,this.collator.evaluate(a)):t(a,i,o)}eachChild(e){e(this.lhs),e(this.rhs),this.collator&&e(this.collator)}outputDefined(){return!0}serialize(){const t=[e];return this.eachChild((e=>{t.push(e.serialize())})),t}}}const pr=ur("==",(function(e,t,r){return t===r}),lr),cr=ur("!=",(function(e,t,r){return t!==r}),(function(e,t,r,n){return!lr(0,t,r,n)})),fr=ur("<",(function(e,t,r){return t<r}),(function(e,t,r,n){return n.compare(t,r)<0})),dr=ur(">",(function(e,t,r){return t>r}),(function(e,t,r,n){return n.compare(t,r)>0})),mr=ur("<=",(function(e,t,r){return t<=r}),(function(e,t,r,n){return n.compare(t,r)<=0})),yr=ur(">=",(function(e,t,r){return t>=r}),(function(e,t,r,n){return n.compare(t,r)>=0}));class hr{constructor(e,t,r,n,a,i){this.type=ae,this.number=e,this.locale=t,this.currency=r,this.unit=n,this.minFractionDigits=a,this.maxFractionDigits=i}static parse(e,t){if(3!==e.length)return t.error("Expected two arguments.");const r=t.parse(e[1],1,ne);if(!r)return null;const n=e[2];if("object"!=typeof n||Array.isArray(n))return t.error("NumberFormat options argument must be an object.");let a=null;if(n.locale&&(a=t.parse(n.locale,1,ae),!a))return null;let i=null;if(n.currency&&(i=t.parse(n.currency,1,ae),!i))return null;let o=null;if(n.unit&&(o=t.parse(n.unit,1,ae),!o))return null;let s=null;if(n["min-fraction-digits"]&&(s=t.parse(n["min-fraction-digits"],1,ne),!s))return null;let l=null;return n["max-fraction-digits"]&&(l=t.parse(n["max-fraction-digits"],1,ne),!l)?null:new hr(r,a,i,o,s,l)}evaluate(e){return new Intl.NumberFormat(this.locale?this.locale.evaluate(e):[],{style:(this.currency?"currency":this.unit&&"unit")||"decimal",currency:this.currency?this.currency.evaluate(e):void 0,unit:this.unit?this.unit.evaluate(e):void 0,minimumFractionDigits:this.minFractionDigits?this.minFractionDigits.evaluate(e):void 0,maximumFractionDigits:this.maxFractionDigits?this.maxFractionDigits.evaluate(e):void 0}).format(this.number.evaluate(e))}eachChild(e){e(this.number),this.locale&&e(this.locale),this.currency&&e(this.currency),this.unit&&e(this.unit),this.minFractionDigits&&e(this.minFractionDigits),this.maxFractionDigits&&e(this.maxFractionDigits)}outputDefined(){return!1}serialize(){const e={};return this.locale&&(e.locale=this.locale.serialize()),this.currency&&(e.currency=this.currency.serialize()),this.unit&&(e.unit=this.unit.serialize()),this.minFractionDigits&&(e["min-fraction-digits"]=this.minFractionDigits.serialize()),this.maxFractionDigits&&(e["max-fraction-digits"]=this.maxFractionDigits.serialize()),["number-format",this.number.serialize(),e]}}class gr{constructor(e){this.type=ne,this.input=e}static parse(e,t){if(2!==e.length)return t.error(`Expected 1 argument, but found ${e.length-1} instead.`);const r=t.parse(e[1],1);return r?"array"!==r.type.kind&&"string"!==r.type.kind&&"value"!==r.type.kind?t.error(`Expected argument of type string or array, but found ${de(r.type)} instead.`):new gr(r):null}evaluate(e){const t=this.input.evaluate(e);if("string"==typeof t)return t.length;if(Array.isArray(t))return t.length;throw new qe(`Expected value to be of type string or array, but found ${de(Ae(t))} instead.`)}eachChild(e){e(this.input)}outputDefined(){return!1}serialize(){const e=["length"];return this.eachChild((t=>{e.push(t.serialize())})),e}}const vr={"==":pr,"!=":cr,">":dr,"<":fr,">=":yr,"<=":mr,array:Ee,at:Yt,boolean:Ee,case:ar,coalesce:Wt,collator:Le,format:Te,image:Ie,in:Kt,"index-of":er,interpolate:Gt,"interpolate-hcl":Gt,"interpolate-lab":Gt,length:gr,let:Xt,literal:_e,match:rr,number:Ee,"number-format":hr,object:Ee,slice:or,step:gt,string:Ee,"to-boolean":Pe,"to-color":Pe,"to-number":Pe,"to-string":Pe,var:ct,within:ot};function br(e,[t,r,n,a]){t=t.evaluate(e),r=r.evaluate(e),n=n.evaluate(e);const i=a?a.evaluate(e):1,o=ke(t,r,n,i);if(o)throw new qe(o);return new V(t/255*i,r/255*i,n/255*i,i)}function xr(e,t){return e in t}function wr(e,t){const r=t[e];return void 0===r?null:r}function kr(e){return{type:e}}Ne.register(vr,{error:[{kind:"error"},[ae],(e,[t])=>{throw new qe(t.evaluate(e))}],typeof:[ae,[le],(e,[t])=>de(Ae(t.evaluate(e)))],"to-rgba":[fe(ne,4),[oe],(e,[t])=>t.evaluate(e).toArray()],rgb:[oe,[ne,ne,ne],br],rgba:[oe,[ne,ne,ne,ne],br],has:{type:ie,overloads:[[[ae],(e,[t])=>xr(t.evaluate(e),e.properties())],[[ae,se],(e,[t,r])=>xr(t.evaluate(e),r.evaluate(e))]]},get:{type:le,overloads:[[[ae],(e,[t])=>wr(t.evaluate(e),e.properties())],[[ae,se],(e,[t,r])=>wr(t.evaluate(e),r.evaluate(e))]]},"feature-state":[le,[ae],(e,[t])=>wr(t.evaluate(e),e.featureState||{})],properties:[se,[],e=>e.properties()],"geometry-type":[ae,[],e=>e.geometryType()],id:[le,[],e=>e.id()],zoom:[ne,[],e=>e.globals.zoom],pitch:[ne,[],e=>e.globals.pitch||0],"distance-from-center":[ne,[],e=>e.distanceFromCenter()],"heatmap-density":[ne,[],e=>e.globals.heatmapDensity||0],"line-progress":[ne,[],e=>e.globals.lineProgress||0],"sky-radial-progress":[ne,[],e=>e.globals.skyRadialProgress||0],accumulated:[le,[],e=>void 0===e.globals.accumulated?null:e.globals.accumulated],"+":[ne,kr(ne),(e,t)=>{let r=0;for(const n of t)r+=n.evaluate(e);return r}],"*":[ne,kr(ne),(e,t)=>{let r=1;for(const n of t)r*=n.evaluate(e);return r}],"-":{type:ne,overloads:[[[ne,ne],(e,[t,r])=>t.evaluate(e)-r.evaluate(e)],[[ne],(e,[t])=>-t.evaluate(e)]]},"/":[ne,[ne,ne],(e,[t,r])=>t.evaluate(e)/r.evaluate(e)],"%":[ne,[ne,ne],(e,[t,r])=>t.evaluate(e)%r.evaluate(e)],ln2:[ne,[],()=>Math.LN2],pi:[ne,[],()=>Math.PI],e:[ne,[],()=>Math.E],"^":[ne,[ne,ne],(e,[t,r])=>Math.pow(t.evaluate(e),r.evaluate(e))],sqrt:[ne,[ne],(e,[t])=>Math.sqrt(t.evaluate(e))],log10:[ne,[ne],(e,[t])=>Math.log(t.evaluate(e))/Math.LN10],ln:[ne,[ne],(e,[t])=>Math.log(t.evaluate(e))],log2:[ne,[ne],(e,[t])=>Math.log(t.evaluate(e))/Math.LN2],sin:[ne,[ne],(e,[t])=>Math.sin(t.evaluate(e))],cos:[ne,[ne],(e,[t])=>Math.cos(t.evaluate(e))],tan:[ne,[ne],(e,[t])=>Math.tan(t.evaluate(e))],asin:[ne,[ne],(e,[t])=>Math.asin(t.evaluate(e))],acos:[ne,[ne],(e,[t])=>Math.acos(t.evaluate(e))],atan:[ne,[ne],(e,[t])=>Math.atan(t.evaluate(e))],min:[ne,kr(ne),(e,t)=>Math.min(...t.map((t=>t.evaluate(e))))],max:[ne,kr(ne),(e,t)=>Math.max(...t.map((t=>t.evaluate(e))))],abs:[ne,[ne],(e,[t])=>Math.abs(t.evaluate(e))],round:[ne,[ne],(e,[t])=>{const r=t.evaluate(e);return r<0?-Math.round(-r):Math.round(r)}],floor:[ne,[ne],(e,[t])=>Math.floor(t.evaluate(e))],ceil:[ne,[ne],(e,[t])=>Math.ceil(t.evaluate(e))],"filter-==":[ie,[ae,le],(e,[t,r])=>e.properties()[t.value]===r.value],"filter-id-==":[ie,[le],(e,[t])=>e.id()===t.value],"filter-type-==":[ie,[ae],(e,[t])=>e.geometryType()===t.value],"filter-<":[ie,[ae,le],(e,[t,r])=>{const n=e.properties()[t.value],a=r.value;return typeof n==typeof a&&n<a}],"filter-id-<":[ie,[le],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r<n}],"filter->":[ie,[ae,le],(e,[t,r])=>{const n=e.properties()[t.value],a=r.value;return typeof n==typeof a&&n>a}],"filter-id->":[ie,[le],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r>n}],"filter-<=":[ie,[ae,le],(e,[t,r])=>{const n=e.properties()[t.value],a=r.value;return typeof n==typeof a&&n<=a}],"filter-id-<=":[ie,[le],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r<=n}],"filter->=":[ie,[ae,le],(e,[t,r])=>{const n=e.properties()[t.value],a=r.value;return typeof n==typeof a&&n>=a}],"filter-id->=":[ie,[le],(e,[t])=>{const r=e.id(),n=t.value;return typeof r==typeof n&&r>=n}],"filter-has":[ie,[le],(e,[t])=>t.value in e.properties()],"filter-has-id":[ie,[],e=>null!==e.id()&&void 0!==e.id()],"filter-type-in":[ie,[fe(ae)],(e,[t])=>t.value.indexOf(e.geometryType())>=0],"filter-id-in":[ie,[fe(le)],(e,[t])=>t.value.indexOf(e.id())>=0],"filter-in-small":[ie,[ae,fe(le)],(e,[t,r])=>r.value.indexOf(e.properties()[t.value])>=0],"filter-in-large":[ie,[ae,fe(le)],(e,[t,r])=>function(e,t,r,n){for(;r<=n;){const a=r+n>>1;if(t[a]===e)return!0;t[a]>e?n=a-1:r=a+1}return!1}(e.properties()[t.value],r.value,0,r.value.length-1)],all:{type:ie,overloads:[[[ie,ie],(e,[t,r])=>t.evaluate(e)&&r.evaluate(e)],[kr(ie),(e,t)=>{for(const r of t)if(!r.evaluate(e))return!1;return!0}]]},any:{type:ie,overloads:[[[ie,ie],(e,[t,r])=>t.evaluate(e)||r.evaluate(e)],[kr(ie),(e,t)=>{for(const r of t)if(r.evaluate(e))return!0;return!1}]]},"!":[ie,[ie],(e,[t])=>!t.evaluate(e)],"is-supported-script":[ie,[ae],(e,[t])=>{const r=e.globals&&e.globals.isSupportedScript;return!r||r(t.evaluate(e))}],upcase:[ae,[ae],(e,[t])=>t.evaluate(e).toUpperCase()],downcase:[ae,[ae],(e,[t])=>t.evaluate(e).toLowerCase()],concat:[ae,kr(le),(e,t)=>t.map((t=>Se(t.evaluate(e)))).join("")],"resolved-locale":[ae,[ue],(e,[t])=>t.evaluate(e).resolvedLocale()]});var zr=vr;function Ar(e){return{result:"success",value:e}}function Sr(e){return{result:"error",value:e}}function Mr(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}class _r{constructor(e,t){this.expression=e,this._warningHistory={},this._evaluator=new Re,this._defaultValue=t?function(e){return"color"===e.type&&(Mr(e.default)||Array.isArray(e.default))?new V(0,0,0,0):"color"===e.type?V.parse(e.default)||null:void 0===e.default?null:e.default}(t):null,this._enumValues=t&&"enum"===t.type?t.values:null}evaluateWithoutErrorHandling(e,t,r,n,a,i,o,s){return this._evaluator.globals=e,this._evaluator.feature=t,this._evaluator.featureState=r,this._evaluator.canonical=n||null,this._evaluator.availableImages=a||null,this._evaluator.formattedSection=i,this._evaluator.featureTileCoord=o||null,this._evaluator.featureDistanceData=s||null,this.expression.evaluate(this._evaluator)}evaluate(e,t,r,n,a,i,o,s){this._evaluator.globals=e,this._evaluator.feature=t||null,this._evaluator.featureState=r||null,this._evaluator.canonical=n||null,this._evaluator.availableImages=a||null,this._evaluator.formattedSection=i||null,this._evaluator.featureTileCoord=o||null,this._evaluator.featureDistanceData=s||null;try{const e=this.expression.evaluate(this._evaluator);if(null==e||"number"==typeof e&&e!=e)return this._defaultValue;if(this._enumValues&&!(e in this._enumValues))throw new qe(`Expected value to be one of ${Object.keys(this._enumValues).map((e=>JSON.stringify(e))).join(", ")}, but found ${JSON.stringify(e)} instead.`);return e}catch(e){return this._warningHistory[e.message]||(this._warningHistory[e.message]=!0,"undefined"!=typeof console&&console.warn(e.message)),this._defaultValue}}}function qr(e,t){const r=new dt(zr,[],t?function(e){const t={color:oe,string:ae,number:ne,enum:ae,boolean:ie,formatted:pe,resolvedImage:ce};return"array"===e.type?fe(t[e.value]||le,e.length):t[e.type]}(t):void 0),n=r.parse(e,void 0,void 0,void 0,t&&"string"===t.type?{typeAnnotation:"coerce"}:void 0);return n?Ar(new _r(n,t)):Sr(r.errors)}class $r{constructor(e,t){this.kind=e,this._styleExpression=t,this.isStateDependent="constant"!==e&&!lt(t.expression)}evaluateWithoutErrorHandling(e,t,r,n,a,i){return this._styleExpression.evaluateWithoutErrorHandling(e,t,r,n,a,i)}evaluate(e,t,r,n,a,i){return this._styleExpression.evaluate(e,t,r,n,a,i)}}class Cr{constructor(e,t,r,n){this.kind=e,this.zoomStops=r,this._styleExpression=t,this.isStateDependent="camera"!==e&&!lt(t.expression),this.interpolationType=n}evaluateWithoutErrorHandling(e,t,r,n,a,i){return this._styleExpression.evaluateWithoutErrorHandling(e,t,r,n,a,i)}evaluate(e,t,r,n,a,i){return this._styleExpression.evaluate(e,t,r,n,a,i)}interpolationFactor(e,t,r){return this.interpolationType?Gt.interpolationFactor(this.interpolationType,e,t,r):0}}function Er(e,t){if("error"===(e=qr(e,t)).result)return e;const r=e.value.expression,n=st(r);if(!n&&!function(e){return"data-driven"===e["property-type"]}(t))return Sr([new Q("","data expressions not supported")]);const a=ut(r,["zoom","pitch","distance-from-center"]);if(!a&&!function(e){return!!e.expression&&e.expression.parameters.indexOf("zoom")>-1}(t))return Sr([new Q("","zoom expressions not supported")]);const i=Tr(r);if(!i&&!a)return Sr([new Q("",'"zoom" expression may only be used as input to a top-level "step" or "interpolate" expression.')]);if(i instanceof Q)return Sr([i]);if(i instanceof Gt&&!function(e){return!!e.expression&&e.expression.interpolated}(t))return Sr([new Q("",'"interpolate" expressions cannot be used with this property')]);if(!i)return Ar(new $r(n?"constant":"source",e.value));const o=i instanceof Gt?i.interpolation:void 0;return Ar(new Cr(n?"camera":"composite",e.value,i.labels,o))}function Tr(e){let t=null;if(e instanceof Xt)t=Tr(e.result);else if(e instanceof Wt){for(const r of e.args)if(t=Tr(r),t)break}else(e instanceof gt||e instanceof Gt)&&e.input instanceof Ne&&"zoom"===e.input.name&&(t=e);return t instanceof Q||e.eachChild((e=>{const r=Tr(e);r instanceof Q?t=r:!t&&r?t=new Q("",'"zoom" expression may only be used as input to a top-level "step" or "interpolate" expression.'):t&&r&&t!==r&&(t=new Q("",'Only one zoom-based "step" or "interpolate" subexpression may be used in an expression.'))})),t}function Ir(e){if(Array.isArray(e))return e.map(Ir);if(e instanceof Object&&!(e instanceof Number||e instanceof String||e instanceof Boolean)){const t={};for(const r in e)t[r]=Ir(e[r]);return t}return function(e){return e instanceof Number||e instanceof String||e instanceof Boolean?e.valueOf():e}(e)}var jr={$version:8,$root:{version:{required:!0,type:"enum",values:[8]},name:{type:"string"},metadata:{type:"*"},center:{type:"array",value:"number"},zoom:{type:"number"},bearing:{type:"number",default:0,period:360,units:"degrees"},pitch:{type:"number",default:0,units:"degrees"},light:{type:"light"},terrain:{type:"terrain"},fog:{type:"fog"},sources:{required:!0,type:"sources"},sprite:{type:"string"},glyphs:{type:"string"},transition:{type:"transition"},projection:{type:"projection"},layers:{required:!0,type:"array",value:"layer"}},sources:{"*":{type:"source"}},source:["source_vector","source_raster","source_raster_dem","source_geojson","source_video","source_image"],source_vector:{type:{required:!0,type:"enum",values:{vector:{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},scheme:{type:"enum",values:{xyz:{},tms:{}},default:"xyz"},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},attribution:{type:"string"},promoteId:{type:"promoteId"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_raster:{type:{required:!0,type:"enum",values:{raster:{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},tileSize:{type:"number",default:512,units:"pixels"},scheme:{type:"enum",values:{xyz:{},tms:{}},default:"xyz"},attribution:{type:"string"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_raster_dem:{type:{required:!0,type:"enum",values:{"raster-dem":{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},tileSize:{type:"number",default:512,units:"pixels"},attribution:{type:"string"},encoding:{type:"enum",values:{terrarium:{},mapbox:{}},default:"mapbox"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_geojson:{type:{required:!0,type:"enum",values:{geojson:{}}},data:{type:"*"},maxzoom:{type:"number",default:18},attribution:{type:"string"},buffer:{type:"number",default:128,maximum:512,minimum:0},filter:{type:"*"},tolerance:{type:"number",default:.375},cluster:{type:"boolean",default:!1},clusterRadius:{type:"number",default:50,minimum:0},clusterMaxZoom:{type:"number"},clusterMinPoints:{type:"number"},clusterProperties:{type:"*"},lineMetrics:{type:"boolean",default:!1},generateId:{type:"boolean",default:!1},promoteId:{type:"promoteId"}},source_video:{type:{required:!0,type:"enum",values:{video:{}}},urls:{required:!0,type:"array",value:"string"},coordinates:{required:!0,type:"array",length:4,value:{type:"array",length:2,value:"number"}}},source_image:{type:{required:!0,type:"enum",values:{image:{}}},url:{required:!0,type:"string"},coordinates:{required:!0,type:"array",length:4,value:{type:"array",length:2,value:"number"}}},layer:{id:{type:"string",required:!0},type:{type:"enum",values:{fill:{},line:{},symbol:{},circle:{},heatmap:{},"fill-extrusion":{},raster:{},hillshade:{},background:{},sky:{}},required:!0},metadata:{type:"*"},source:{type:"string"},"source-layer":{type:"string"},minzoom:{type:"number",minimum:0,maximum:24},maxzoom:{type:"number",minimum:0,maximum:24},filter:{type:"filter"},layout:{type:"layout"},paint:{type:"paint"}},layout:["layout_fill","layout_line","layout_circle","layout_heatmap","layout_fill-extrusion","layout_symbol","layout_raster","layout_hillshade","layout_background","layout_sky"],layout_background:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_sky:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_fill:{"fill-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_circle:{"circle-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_heatmap:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},"layout_fill-extrusion":{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"},"fill-extrusion-edge-radius":{type:"number",private:!0,default:0,minimum:0,maximum:1,"property-type":"constant"}},layout_line:{"line-cap":{type:"enum",values:{butt:{},round:{},square:{}},default:"butt",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-join":{type:"enum",values:{bevel:{},round:{},miter:{}},default:"miter",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-miter-limit":{type:"number",default:2,requires:[{"line-join":"miter"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-round-limit":{type:"number",default:1.05,requires:[{"line-join":"round"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_symbol:{"symbol-placement":{type:"enum",values:{point:{},line:{},"line-center":{}},default:"point",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"symbol-spacing":{type:"number",default:250,minimum:1,units:"pixels",requires:[{"symbol-placement":"line"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"symbol-avoid-edges":{type:"boolean",default:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"symbol-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"symbol-z-order":{type:"enum",values:{auto:{},"viewport-y":{},source:{}},default:"auto",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-allow-overlap":{type:"boolean",default:!1,requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-ignore-placement":{type:"boolean",default:!1,requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-optional":{type:"boolean",default:!1,requires:["icon-image","text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-rotation-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-size":{type:"number",default:1,minimum:0,units:"factor of the original icon size",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-text-fit":{type:"enum",values:{none:{},width:{},height:{},both:{}},default:"none",requires:["icon-image","text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-text-fit-padding":{type:"array",value:"number",length:4,default:[0,0,0,0],units:"pixels",requires:["icon-image","text-field",{"icon-text-fit":["both","width","height"]}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-image":{type:"resolvedImage",tokens:!0,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-rotate":{type:"number",default:0,period:360,units:"degrees",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-padding":{type:"number",default:2,minimum:0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-keep-upright":{type:"boolean",default:!1,requires:["icon-image",{"icon-rotation-alignment":"map"},{"symbol-placement":["line","line-center"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-offset":{type:"array",value:"number",length:2,default:[0,0],requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-anchor":{type:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},default:"center",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-pitch-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-pitch-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-rotation-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-field":{type:"formatted",default:"",tokens:!0,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"],requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-size":{type:"number",default:16,minimum:0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-max-width":{type:"number",default:10,minimum:0,units:"ems",requires:["text-field",{"symbol-placement":["point"]}],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-line-height":{type:"number",default:1.2,units:"ems",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-letter-spacing":{type:"number",default:0,units:"ems",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-justify":{type:"enum",values:{auto:{},left:{},center:{},right:{}},default:"center",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-radial-offset":{type:"number",units:"ems",default:0,requires:["text-field"],"property-type":"data-driven",expression:{interpolated:!0,parameters:["zoom","feature"]}},"text-variable-anchor":{type:"array",value:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},requires:["text-field",{"symbol-placement":["point"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-anchor":{type:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},default:"center",requires:["text-field",{"!":"text-variable-anchor"}],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-max-angle":{type:"number",default:45,units:"degrees",requires:["text-field",{"symbol-placement":["line","line-center"]}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-writing-mode":{type:"array",value:"enum",values:{horizontal:{},vertical:{}},requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-rotate":{type:"number",default:0,period:360,units:"degrees",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-padding":{type:"number",default:2,minimum:0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-keep-upright":{type:"boolean",default:!0,requires:["text-field",{"text-rotation-alignment":"map"},{"symbol-placement":["line","line-center"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-transform":{type:"enum",values:{none:{},uppercase:{},lowercase:{}},default:"none",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-offset":{type:"array",value:"number",units:"ems",length:2,default:[0,0],requires:["text-field",{"!":"text-radial-offset"}],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-allow-overlap":{type:"boolean",default:!1,requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-ignore-placement":{type:"boolean",default:!1,requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-optional":{type:"boolean",default:!1,requires:["text-field","icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_raster:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_hillshade:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},filter:{type:"array",value:"*"},filter_symbol:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature","pitch","distance-from-center"]}},filter_fill:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_line:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_circle:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},"filter_fill-extrusion":{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_heatmap:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_operator:{type:"enum",values:{"==":{},"!=":{},">":{},">=":{},"<":{},"<=":{},in:{},"!in":{},all:{},any:{},none:{},has:{},"!has":{},within:{}}},geometry_type:{type:"enum",values:{Point:{},LineString:{},Polygon:{}}},function:{expression:{type:"expression"},stops:{type:"array",value:"function_stop"},base:{type:"number",default:1,minimum:0},property:{type:"string",default:"$zoom"},type:{type:"enum",values:{identity:{},exponential:{},interval:{},categorical:{}},default:"exponential"},colorSpace:{type:"enum",values:{rgb:{},lab:{},hcl:{}},default:"rgb"},default:{type:"*",required:!1}},function_stop:{type:"array",minimum:0,maximum:24,value:["number","color"],length:2},expression:{type:"array",value:"*",minimum:1},expression_name:{type:"enum",values:{let:{group:"Variable binding"},var:{group:"Variable binding"},literal:{group:"Types"},array:{group:"Types"},at:{group:"Lookup"},in:{group:"Lookup"},"index-of":{group:"Lookup"},slice:{group:"Lookup"},case:{group:"Decision"},match:{group:"Decision"},coalesce:{group:"Decision"},step:{group:"Ramps, scales, curves"},interpolate:{group:"Ramps, scales, curves"},"interpolate-hcl":{group:"Ramps, scales, curves"},"interpolate-lab":{group:"Ramps, scales, curves"},ln2:{group:"Math"},pi:{group:"Math"},e:{group:"Math"},typeof:{group:"Types"},string:{group:"Types"},number:{group:"Types"},boolean:{group:"Types"},object:{group:"Types"},collator:{group:"Types"},format:{group:"Types"},image:{group:"Types"},"number-format":{group:"Types"},"to-string":{group:"Types"},"to-number":{group:"Types"},"to-boolean":{group:"Types"},"to-rgba":{group:"Color"},"to-color":{group:"Types"},rgb:{group:"Color"},rgba:{group:"Color"},get:{group:"Lookup"},has:{group:"Lookup"},length:{group:"Lookup"},properties:{group:"Feature data"},"feature-state":{group:"Feature data"},"geometry-type":{group:"Feature data"},id:{group:"Feature data"},zoom:{group:"Camera"},pitch:{group:"Camera"},"distance-from-center":{group:"Camera"},"heatmap-density":{group:"Heatmap"},"line-progress":{group:"Feature data"},"sky-radial-progress":{group:"sky"},accumulated:{group:"Feature data"},"+":{group:"Math"},"*":{group:"Math"},"-":{group:"Math"},"/":{group:"Math"},"%":{group:"Math"},"^":{group:"Math"},sqrt:{group:"Math"},log10:{group:"Math"},ln:{group:"Math"},log2:{group:"Math"},sin:{group:"Math"},cos:{group:"Math"},tan:{group:"Math"},asin:{group:"Math"},acos:{group:"Math"},atan:{group:"Math"},min:{group:"Math"},max:{group:"Math"},round:{group:"Math"},abs:{group:"Math"},ceil:{group:"Math"},floor:{group:"Math"},distance:{group:"Math"},"==":{group:"Decision"},"!=":{group:"Decision"},">":{group:"Decision"},"<":{group:"Decision"},">=":{group:"Decision"},"<=":{group:"Decision"},all:{group:"Decision"},any:{group:"Decision"},"!":{group:"Decision"},within:{group:"Decision"},"is-supported-script":{group:"String"},upcase:{group:"String"},downcase:{group:"String"},concat:{group:"String"},"resolved-locale":{group:"String"}}},fog:{range:{type:"array",default:[.5,10],minimum:-20,maximum:20,length:2,value:"number","property-type":"data-constant",transition:!0,expression:{interpolated:!0,parameters:["zoom"]}},color:{type:"color","property-type":"data-constant",default:"#ffffff",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"high-color":{type:"color","property-type":"data-constant",default:"#245cdf",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"space-color":{type:"color","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],4,"#010b19",7,"#367ab9"],expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"horizon-blend":{type:"number","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],4,.2,7,.1],minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"star-intensity":{type:"number","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],5,.35,6,0],minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0}},light:{anchor:{type:"enum",default:"viewport",values:{map:{},viewport:{}},"property-type":"data-constant",transition:!1,expression:{interpolated:!1,parameters:["zoom"]}},position:{type:"array",default:[1.15,210,30],length:3,value:"number","property-type":"data-constant",transition:!0,expression:{interpolated:!0,parameters:["zoom"]}},color:{type:"color","property-type":"data-constant",default:"#ffffff",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},intensity:{type:"number","property-type":"data-constant",default:.5,minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0}},projection:{name:{type:"enum",values:{albers:{},equalEarth:{},equirectangular:{},lambertConformalConic:{},mercator:{},naturalEarth:{},winkelTripel:{},globe:{}},default:"mercator",required:!0},center:{type:"array",length:2,value:"number","property-type":"data-constant",minimum:[-180,-90],maximum:[180,90],transition:!1,requires:[{name:["albers","lambertConformalConic"]}]},parallels:{type:"array",length:2,value:"number","property-type":"data-constant",minimum:[-90,-90],maximum:[90,90],transition:!1,requires:[{name:["albers","lambertConformalConic"]}]}},terrain:{source:{type:"string",required:!0},exaggeration:{type:"number","property-type":"data-constant",default:1,minimum:0,maximum:1e3,expression:{interpolated:!0,parameters:["zoom"]},transition:!0,requires:["source"]}},paint:["paint_fill","paint_line","paint_circle","paint_heatmap","paint_fill-extrusion","paint_symbol","paint_raster","paint_hillshade","paint_background","paint_sky"],paint_fill:{"fill-antialias":{type:"boolean",default:!0,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"fill-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-outline-color":{type:"color",transition:!0,requires:[{"!":"fill-pattern"},{"fill-antialias":!0}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["fill-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"}},"paint_fill-extrusion":{"fill-extrusion-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"fill-extrusion-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["fill-extrusion-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"fill-extrusion-height":{type:"number",default:0,minimum:0,units:"meters",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-base":{type:"number",default:0,minimum:0,units:"meters",transition:!0,requires:["fill-extrusion-height"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-vertical-gradient":{type:"boolean",default:!0,transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-ambient-occlusion-intensity":{"property-type":"data-constant",type:"number",private:!0,default:0,minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"fill-extrusion-ambient-occlusion-radius":{"property-type":"data-constant",type:"number",private:!0,default:3,minimum:0,expression:{interpolated:!0,parameters:["zoom"]},transition:!0,requires:["fill-extrusion-edge-radius"]}},paint_line:{"line-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"line-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["line-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"line-width":{type:"number",default:1,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-gap-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-offset":{type:"number",default:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-dasharray":{type:"array",value:"number",minimum:0,transition:!1,units:"line widths",requires:[{"!":"line-pattern"}],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-gradient":{type:"color",transition:!1,requires:[{"!":"line-pattern"},{source:"geojson",has:{lineMetrics:!0}}],expression:{interpolated:!0,parameters:["line-progress"]},"property-type":"color-ramp"},"line-trim-offset":{type:"array",value:"number",length:2,default:[0,0],minimum:[0,0],maximum:[1,1],transition:!1,requires:[{source:"geojson",has:{lineMetrics:!0}}],"property-type":"constant"}},paint_circle:{"circle-radius":{type:"number",default:5,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-blur":{type:"number",default:0,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"circle-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["circle-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-pitch-scale":{type:"enum",values:{map:{},viewport:{}},default:"map",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-pitch-alignment":{type:"enum",values:{map:{},viewport:{}},default:"viewport",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-stroke-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-stroke-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-stroke-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"}},paint_heatmap:{"heatmap-radius":{type:"number",default:30,minimum:1,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"heatmap-weight":{type:"number",default:1,minimum:0,transition:!1,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"heatmap-intensity":{type:"number",default:1,minimum:0,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"heatmap-color":{type:"color",default:["interpolate",["linear"],["heatmap-density"],0,"rgba(0, 0, 255, 0)",.1,"royalblue",.3,"cyan",.5,"lime",.7,"yellow",1,"red"],transition:!1,expression:{interpolated:!0,parameters:["heatmap-density"]},"property-type":"color-ramp"},"heatmap-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_symbol:{"icon-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-color":{type:"color",default:"#000000",transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-color":{type:"color",default:"rgba(0, 0, 0, 0)",transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["icon-image","icon-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-color":{type:"color",default:"#000000",transition:!0,overridable:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-color":{type:"color",default:"rgba(0, 0, 0, 0)",transition:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["text-field","text-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"}},paint_raster:{"raster-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-hue-rotate":{type:"number",default:0,period:360,transition:!0,units:"degrees",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-brightness-min":{type:"number",default:0,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-brightness-max":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-saturation":{type:"number",default:0,minimum:-1,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-contrast":{type:"number",default:0,minimum:-1,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-resampling":{type:"enum",values:{linear:{},nearest:{}},default:"linear",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"raster-fade-duration":{type:"number",default:300,minimum:0,transition:!1,units:"milliseconds",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_hillshade:{"hillshade-illumination-direction":{type:"number",default:335,minimum:0,maximum:359,transition:!1,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-illumination-anchor":{type:"enum",values:{map:{},viewport:{}},default:"viewport",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-exaggeration":{type:"number",default:.5,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-shadow-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-highlight-color":{type:"color",default:"#FFFFFF",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-accent-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_background:{"background-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"background-pattern"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"background-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"background-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_sky:{"sky-type":{type:"enum",values:{gradient:{},atmosphere:{}},default:"atmosphere",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-atmosphere-sun":{type:"array",value:"number",length:2,units:"degrees",minimum:[0,0],maximum:[360,180],transition:!1,requires:[{"sky-type":"atmosphere"}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-atmosphere-sun-intensity":{type:"number",requires:[{"sky-type":"atmosphere"}],default:10,minimum:0,maximum:100,transition:!1,"property-type":"data-constant"},"sky-gradient-center":{type:"array",requires:[{"sky-type":"gradient"}],value:"number",default:[0,0],length:2,units:"degrees",minimum:[0,0],maximum:[360,180],transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-gradient-radius":{type:"number",requires:[{"sky-type":"gradient"}],default:90,minimum:0,maximum:180,transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-gradient":{type:"color",default:["interpolate",["linear"],["sky-radial-progress"],.8,"#87ceeb",1,"white"],transition:!1,requires:[{"sky-type":"gradient"}],expression:{interpolated:!0,parameters:["sky-radial-progress"]},"property-type":"color-ramp"},"sky-atmosphere-halo-color":{type:"color",default:"white",transition:!1,requires:[{"sky-type":"atmosphere"}],"property-type":"data-constant"},"sky-atmosphere-color":{type:"color",default:"white",transition:!1,requires:[{"sky-type":"atmosphere"}],"property-type":"data-constant"},"sky-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},transition:{duration:{type:"number",default:300,minimum:0,units:"milliseconds"},delay:{type:"number",default:0,minimum:0,units:"milliseconds"}},"property-type":{"data-driven":{type:"property-type"},"color-ramp":{type:"property-type"},"data-constant":{type:"property-type"},constant:{type:"property-type"}},promoteId:{"*":{type:"string"}}};function Fr(e){if(!0===e||!1===e)return!0;if(!Array.isArray(e)||0===e.length)return!1;switch(e[0]){case"has":return e.length>=2&&"$id"!==e[1]&&"$type"!==e[1];case"in":return e.length>=3&&("string"!=typeof e[1]||Array.isArray(e[2]));case"!in":case"!has":case"none":return!1;case"==":case"!=":case">":case">=":case"<":case"<=":return 3!==e.length||Array.isArray(e[1])||Array.isArray(e[2]);case"any":case"all":for(const t of e.slice(1))if(!Fr(t)&&"boolean"!=typeof t)return!1;return!0;default:return!0}}function Pr(e,t="fill"){if(null==e)return{filter:()=>!0,needGeometry:!1,needFeature:!1};Fr(e)||(e=Vr(e));const r=e;let n=!0;try{n=function(e){if(!Or(e))return e;let t=Ir(e);return Rr(t),t=Dr(t),t}(r)}catch(e){console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(r,null,2)}\n        `)}const a=jr[`filter_${t}`],i=qr(n,a);let o=null;if("error"===i.result)throw new Error(i.value.map((e=>`${e.key}: ${e.message}`)).join(", "));o=(e,t,r)=>i.value.evaluate(e,t,{},r);let s=null,l=null;if(n!==r){const e=qr(r,a);if("error"===e.result)throw new Error(e.value.map((e=>`${e.key}: ${e.message}`)).join(", "));s=(t,r,n,a,i)=>e.value.evaluate(t,r,{},n,void 0,void 0,a,i),l=!st(e.value.expression)}return{filter:o,dynamicFilter:s||void 0,needGeometry:Ur(n),needFeature:!!l}}function Dr(e){if(!Array.isArray(e))return e;const t=function(e){if(Nr.has(e[0]))for(let t=1;t<e.length;t++)if(Or(e[t]))return!0;return e}(e);return!0===t?t:t.map((e=>Dr(e)))}function Rr(e){let t=!1;const r=[];if("case"===e[0]){for(let n=1;n<e.length-1;n+=2)t=t||Or(e[n]),r.push(e[n+1]);r.push(e[e.length-1])}else if("match"===e[0]){t=t||Or(e[1]);for(let t=2;t<e.length-1;t+=2)r.push(e[t+1]);r.push(e[e.length-1])}else if("step"===e[0]){t=t||Or(e[1]);for(let t=1;t<e.length-1;t+=2)r.push(e[t+1])}t&&(e.length=0,e.push("any",...r));for(let t=1;t<e.length;t++)Rr(e[t])}function Or(e){if(!Array.isArray(e))return!1;if("pitch"===(t=e[0])||"distance-from-center"===t)return!0;var t;for(let t=1;t<e.length;t++)if(Or(e[t]))return!0;return!1}const Nr=new Set(["in","==","!=",">",">=","<","<=","to-boolean"]);function Lr(e,t){return e<t?-1:e>t?1:0}function Ur(e){if(!Array.isArray(e))return!1;if("within"===e[0])return!0;for(let t=1;t<e.length;t++)if(Ur(e[t]))return!0;return!1}function Vr(e){if(!e)return!0;const t=e[0];return e.length<=1?"any"!==t:"=="===t?Gr(e[1],e[2],"=="):"!="===t?Zr(Gr(e[1],e[2],"==")):"<"===t||">"===t||"<="===t||">="===t?Gr(e[1],e[2],t):"any"===t?(r=e.slice(1),["any"].concat(r.map(Vr))):"all"===t?["all"].concat(e.slice(1).map(Vr)):"none"===t?["all"].concat(e.slice(1).map(Vr).map(Zr)):"in"===t?Jr(e[1],e.slice(2)):"!in"===t?Zr(Jr(e[1],e.slice(2))):"has"===t?Wr(e[1]):"!has"===t?Zr(Wr(e[1])):"within"!==t||e;var r}function Gr(e,t,r){switch(e){case"$type":return[`filter-type-${r}`,t];case"$id":return[`filter-id-${r}`,t];default:return[`filter-${r}`,e,t]}}function Jr(e,t){if(0===t.length)return!1;switch(e){case"$type":return["filter-type-in",["literal",t]];case"$id":return["filter-id-in",["literal",t]];default:return t.length>200&&!t.some((e=>typeof e!=typeof t[0]))?["filter-in-large",e,["literal",t.sort(Lr)]]:["filter-in-small",e,["literal",t]]}}function Wr(e){switch(e){case"$type":return!0;case"$id":return["filter-has-id"];default:return["filter-has",e]}}function Zr(e){return["!",e]}var Xr=["type","source","source-layer","minzoom","maxzoom","filter","layout"];function Br(e,t){const r={};for(const t in e)"ref"!==t&&(r[t]=e[t]);return Xr.forEach((e=>{e in t&&(r[e]=t[e])})),r}var Yr={thin:100,hairline:100,"ultra-light":200,"extra-light":200,light:300,book:300,regular:400,normal:400,plain:400,roman:400,standard:400,medium:500,"semi-bold":600,"demi-bold":600,bold:700,"extra-bold":800,"ultra-bold":800,heavy:900,black:900,"heavy-black":900,fat:900,poster:900,"ultra-black":950,"extra-black":950},Hr=" ",Kr=/(italic|oblique)$/i,Qr={},en=j((function(e,t,r){var n=Qr[e];if(!n){Array.isArray(e)||(e=[e]);for(var a,i,o=400,s="normal",l=[],u=0,p=e.length;u<p;++u){var c=e[u].split(" "),f=c[c.length-1].toLowerCase();for(var d in"normal"==f||"italic"==f||"oblique"==f?(s=i?s:f,i=!0,c.pop(),f=c[c.length-1].toLowerCase()):Kr.test(f)&&(f=f.replace(Kr,""),s=i?s:c[c.length-1].replace(f,""),i=!0),Yr){var m=c.length>1?c[c.length-2].toLowerCase():"";if(f==d||f==d.replace("-","")||m+"-"+f==d){o=a?o:Yr[d],c.pop(),m&&d.startsWith(m)&&c.pop();break}}a||"number"!=typeof f||(o=f,a=!0);var y=c.join(Hr).replace("Klokantech Noto Sans","Noto Sans");-1!==y.indexOf(Hr)&&(y='"'+y+'"'),l.push(y)}n=Qr[e]=[s,o,l]}return n[0]+Hr+n[1]+Hr+t+"px"+(r?"/"+r:"")+Hr+n[2]}));const tn="https://api.mapbox.com";function rn(e){return 0!==e.indexOf("mapbox://")?"":e.slice(9)}function nn(e,t){const r=rn(e);if(!r)return decodeURI(new URL(e,location.href).href);if(0!==r.indexOf("styles/"))throw new Error(`unexpected style url: ${e}`);const n=r.slice(7);return`${tn}/styles/v1/${n}?&access_token=${t}`}const an=["a","b","c","d"];function on(e,t,r,n){const a=new URL(e,n),i=rn(e);if(!i)return t?(a.searchParams.has(r)||a.searchParams.set(r,t),[decodeURI(a.href)]):[decodeURI(a.href)];if("mapbox.satellite"===i){const e=window.devicePixelRatio>=1.5?"@2x":"";return[`https://api.mapbox.com/v4/${i}/{z}/{x}/{y}${e}.webp?access_token=${t}`]}return an.map((e=>`https://${e}.tiles.mapbox.com/v4/${i}/{z}/{x}/{y}.vector.pbf?access_token=${t}`))}const sn={},ln={};let un=0;function pn(e){return e.id||(e.id=un++),e.id}function cn(e){return e*Math.PI/180}const fn=function(){const e=[];for(let t=78271.51696402048;e.length<=24;t/=2)e.push(t);return e}();function dn(e,t){if("undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(e,t);const r=document.createElement("canvas");return r.width=e,r.height=t,r}function mn(e,t){let r=0;const n=t.length;for(;r<n;++r)if(t[r]<e&&r+1<n){const n=t[r]/t[r+1];return r+Math.log(t[r]/e)/Math.log(n)}return n-1}const yn={};function hn(e,t,r={},n){if(t in yn)return n&&(n.request=yn[t][0]),yn[t][1];const a=r.transformRequest&&r.transformRequest(t,e)||t,i=(0,p.hq)((()=>a)).then((e=>(e instanceof Request||(e=new Request(e)),e.headers.get("Accept")||e.headers.set("Accept","application/json"),n&&(n.request=e),fetch(e).then((function(e){return delete yn[t],e.ok?e.json():Promise.reject(new Error("Error fetching source "+t))})).catch((function(e){return delete yn[t],Promise.reject(new Error("Error fetching source "+t))})))));return yn[t]=[a,i],i}function gn(e,t){if("string"!=typeof e)return Promise.resolve(e);if(!e.trim().startsWith("{"))return hn("Style",e=nn(e,t.accessToken),t);try{const t=JSON.parse(e);return Promise.resolve(t)}catch(e){return Promise.reject(e)}}const vn={};function bn(e,t,r,n){const a=[2*r*t.pixelRatio+t.width,2*r*t.pixelRatio+t.height],i=dn(a[0],a[1]),o=i.getContext("2d");o.drawImage(e,t.x,t.y,t.width,t.height,r*t.pixelRatio,r*t.pixelRatio,t.width,t.height);const s=o.getImageData(0,0,a[0],a[1]);o.globalCompositeOperation="destination-over",o.fillStyle=`rgba(${255*n.r},${255*n.g},${255*n.b},${n.a})`;const l=s.data;for(let e=0,n=s.width;e<n;++e)for(let a=0,i=s.height;a<i;++a)l[4*(a*n+e)+3]>0&&o.arc(e,a,r*t.pixelRatio,0,2*Math.PI);return o.fill(),i}function xn(e,t,r){const n=Math.max(0,Math.min(1,(r-e)/(t-e)));return n*n*(3-2*n)}function wn(e,t,r){const n=dn(t.width,t.height),a=n.getContext("2d");a.drawImage(e,t.x,t.y,t.width,t.height,0,0,t.width,t.height);const i=a.getImageData(0,0,t.width,t.height),o=i.data;for(let e=0,t=i.width;e<t;++e)for(let n=0,a=i.height;n<a;++n){const a=4*(n*t+e),i=.75,s=.1,l=xn(i-s,i+s,o[a+3]/255);l>0?(o[a+0]=Math.round(255*r.r*l),o[a+1]=Math.round(255*r.g*l),o[a+2]=Math.round(255*r.b*l),o[a+3]=Math.round(255*l)):o[a+3]=0}return a.putImageData(i,0,0),n}const kn=Array(256).join(" ");function zn(e,t){if(t>=.05){let r="";const n=e.split("\n"),a=kn.slice(0,Math.round(t/.1));for(let e=0,t=n.length;e<t;++e)e>0&&(r+="\n"),r+=n[e].split("").join(a);return r}return e}let An;function Sn(){return An||(An=dn(1,1).getContext("2d")),An}function Mn(e,t){return Sn().measureText(e).width+(e.length-1)*t}const _n={};function qn(e,t,r,n){if(-1!==e.indexOf("\n")){const a=e.split("\n"),i=[];for(let e=0,o=a.length;e<o;++e)i.push(qn(a[e],t,r,n));return i.join("\n")}const a=r+","+t+","+e+","+n;let i=_n[a];if(!i){const o=e.split(" ");if(o.length>1){const e=Sn();e.font=t;const a=e.measureText("M").width*r;let s="";const l=[];for(let e=0,t=o.length;e<t;++e){const t=o[e],r=s+(s?" ":"")+t;Mn(r,n)<=a?s=r:(s&&l.push(s),s=t)}s&&l.push(s);for(let e=0,t=l.length;e<t&&t>1;++e){const r=l[e];if(Mn(r,n)<.35*a){const a=e>0?Mn(l[e-1],n):1/0,i=e<t-1?Mn(l[e+1],n):1/0;l.splice(e,1),t-=1,a<i?(l[e-1]+=" "+r,e-=1):l[e]=r+" "+l[e]}}for(let e=0,t=l.length-1;e<t;++e){const r=l[e],i=l[e+1];if(Mn(r,n)>.7*a&&Mn(i,n)<.6*a){const o=r.split(" "),s=o.pop();Mn(s,n)<.2*a&&(l[e]=o.join(" "),l[e+1]=s+" "+i),t-=1}}i=l.join("\n")}else i=e;i=zn(i,n),_n[a]=i}return i}const $n=/font-family: ?([^;]*);/,Cn=/("|')/g;let En;function Tn(e){if(!En){En={};const e=document.styleSheets;for(let t=0,r=e.length;t<r;++t){const r=e[t];try{const e=r.rules||r.cssRules;if(e)for(let t=0,r=e.length;t<r;++t){const r=e[t];if(5==r.type){const e=r.cssText.match($n);En[e[1].replace(Cn,"")]=!0}}}catch(e){}}}return e in En}const In={},jn={Point:1,MultiPoint:1,LineString:2,MultiLineString:2,Polygon:3,MultiPolygon:3},Fn={center:[.5,.5],left:[0,.5],right:[1,.5],top:[.5,0],bottom:[.5,1],"top-left":[0,0],"top-right":[1,0],"bottom-left":[0,1],"bottom-right":[1,1]},Pn={},Dn={zoom:0};let Rn,On;function Nn(e,t,r,n,a,i,o){const s=e.id;i||(i={},console.warn("No functionCache provided to getValue()")),i[s]||(i[s]={});const l=i[s];if(!l[r]){let n=(e[t]||Pn)[r];const a=jr[`${t}_${e.type}`][r];void 0===n&&(n=a.default);let i=(u=n,Array.isArray(u)&&u.length>0&&"string"==typeof u[0]&&u[0]in zr);if(!i&&Mr(n)&&(n=function(e,t){let r=e.stops;if(!r)return function(e,t){const r=["get",e.property];if(void 0===e.default)return"string"===t.type?["string",r]:r;if("enum"===t.type)return["match",r,Object.keys(t.values),r,e.default];{const n=["color"===t.type?"to-color":t.type,r,G(e.default)];return"array"===t.type&&n.splice(1,0,t.value,t.length||null),n}}(e,t);const n=r&&"object"==typeof r[0][0],a=n||void 0!==e.property,i=n||!a;return r=r.map((e=>!a&&t.tokens&&"string"==typeof e[1]?[e[0],H(e[1])]:[e[0],G(e[1])])),n?function(e,t,r){const n={},a={},i=[];for(let t=0;t<r.length;t++){const o=r[t],s=o[0].zoom;void 0===n[s]&&(n[s]={zoom:s,type:e.type,property:e.property,default:e.default},a[s]=[],i.push(s)),a[s].push([o[0].value,o[1]])}if("exponential"===Y({},t)){const r=[J(e),["linear"],["zoom"]];for(const e of i)B(r,e,Z(n[e],t,a[e]),!1);return r}{const e=["step",["zoom"]];for(const r of i)B(e,r,Z(n[r],t,a[r]),!0);return X(e),e}}(e,t,r):i?function(e,t,r,n=["zoom"]){const a=Y(e,t);let i,o=!1;if("interval"===a)i=["step",n],o=!0;else{if("exponential"!==a)throw new Error(`Unknown zoom function type "${a}"`);{const t=void 0!==e.base?e.base:1;i=[J(e),1===t?["linear"]:["exponential",t],n]}}for(const e of r)B(i,e[0],e[1],o);return X(i),i}(e,t,r):Z(e,t,r)}(n,a),i=!0),i){const e=function(e,t){const r=Er(e,t);if("error"===r.result)throw new Error(r.value.map((e=>`${e.key}: ${e.message}`)).join(", "));return r.value}(n,a);l[r]=e.evaluate.bind(e)}else"color"==a.type&&(n=V.parse(n)),l[r]=function(){return n}}var u;return Dn.zoom=n,l[r](Dn,a,o)}function Ln(e,t,r,n,a){return Nn(e,"layout",`${n}-allow-overlap`,t,r,a)?Nn(e,"layout",`${n}-ignore-placement`,t,r,a)?"none":"obstacle":"declutter"}function Un(e,t,r,n,a){return a||console.warn("No filterCache provided to evaluateFilter()"),e in a||(a[e]=Pr(t).filter),Dn.zoom=n,a[e](Dn,r)}function Vn(e,t){if(e){if(0===e.a||0===t)return;const r=e.a;return t=void 0===t?1:t,0===r?"transparent":"rgba("+Math.round(255*e.r/r)+","+Math.round(255*e.g/r)+","+Math.round(255*e.b/r)+","+r*t+")"}return e}const Gn=/\{[^{}}]*\}/g;function Jn(e,t){return e.replace(Gn,(function(e){return t[e.slice(1,-1)]||""}))}const Wn={};function Zn(e,t,r,c=fn,f=void 0,d=void 0,y=void 0,h=void 0){if("string"==typeof t&&(t=JSON.parse(t)),8!=t.version)throw new Error("glStyle version 8 required.");let g,v,b;if(Wn[function(e,t){return pn(e)+"."+(0,m.v6)(t)}(t,e)]=Array.from(arguments),d)if("undefined"!=typeof Image){const t=new Image;let r;(0,p.hq)((()=>d)).then((e=>{e instanceof Request?fetch(e).then((e=>e.blob())).then((e=>{r=URL.createObjectURL(e),t.src=r})).catch((()=>{})):(t.crossOrigin="anonymous",t.src=e,r&&URL.revokeObjectURL(r))})),t.onload=function(){g=t,v=[t.width,t.height],e.changed(),t.onload=null}}else if("undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){const e=self;e.postMessage({action:"loadImage",src:d}),e.addEventListener("message",(function(e){"imageLoaded"===e.data.action&&e.data.src===d&&(g=e.data.image,v=[g.width,g.height])}))}const x=function(e){e=e.slice();const t=Object.create(null);for(let r=0;r<e.length;r++)t[e[r].id]=e[r];for(let r=0;r<e.length;r++)"ref"in e[r]&&(e[r]=Br(e[r],t[e[r].ref]));return e}(t.layers),w={},k=[],z={},A={},S=function(e){let t=sn[e.id];return t||(t={},sn[pn(e)]=t),t}(t),M=function(e){let t=ln[e.id];return t||(t={},ln[pn(e)]=t),t}(t);let _;for(let e=0,n=x.length;e<n;++e){const n=x[e],a=n.id;if("string"==typeof r&&n.source==r||Array.isArray(r)&&-1!==r.indexOf(a)){const r=n["source-layer"];if(_){if(n.source!==_)throw new Error(`Layer "${a}" does not use source "${_}`)}else{_=n.source;const e=t.sources[_];if(!e)throw new Error(`Source "${_}" is not defined`);const r=e.type;if("vector"!==r&&"geojson"!==r)throw new Error(`Source "${_}" is not of type "vector" or "geojson", but "${r}"`)}let i=w[r];i||(i=[],w[r]=i),i.push({layer:n,index:e}),k.push(a)}}const q=new s.A,$=new a.A,C=[],E=function(r,p,d){const m=r.getProperties(),x=w[m.layer];if(!x)return;let k=c.indexOf(p);-1==k&&(k=mn(p,c));const _=jn[r.getGeometry().getType()],E={id:r.getId(),properties:m,type:_},T=e.get("mapbox-featurestate")[r.getId()];let I,j=-1;for(let c=0,w=x.length;c<w;++c){const w=x[c],F=w.layer,P=F.id;if(void 0!==d&&d!==P)continue;const D=F.layout||Pn,R=F.paint||Pn;if("none"===D.visibility||"minzoom"in F&&k<F.minzoom||"maxzoom"in F&&k>=F.maxzoom)continue;const O=F.filter;if(!O||Un(P,O,E,k,M)){let c,d,x,M,P,O;I=F;const N=w.index;if(3==_&&("fill"==F.type||"fill-extrusion"==F.type))if(d=Nn(F,"paint",F.type+"-opacity",k,E,S,T),F.type+"-pattern"in R){const e=Nn(F,"paint",F.type+"-pattern",k,E,S,T);if(e){const t="string"==typeof e?Jn(e,m):e.toString();if(g&&f&&f[t]){++j,O=C[j],O&&O.getFill()&&!O.getStroke()&&!O.getText()||(O=new l.Ay({fill:new a.A}),C[j]=O),x=O.getFill(),O.setZIndex(N);const e=t+"."+d;let r=A[e];if(!r){const n=f[t],a=dn(n.width,n.height),i=a.getContext("2d");i.globalAlpha=d,i.drawImage(g,n.x,n.y,n.width,n.height,0,0,n.width,n.height),r=i.createPattern(a,"repeat"),A[e]=r}x.setColor(r)}}}else c=Vn(Nn(F,"paint",F.type+"-color",k,E,S,T),d),F.type+"-outline-color"in R&&(P=Vn(Nn(F,"paint",F.type+"-outline-color",k,E,S,T),d)),P||(P=c),(c||P)&&(++j,O=C[j],(!O||c&&!O.getFill()||!c&&O.getFill()||P&&!O.getStroke()||!P&&O.getStroke()||O.getText())&&(O=new l.Ay({fill:c?new a.A:void 0,stroke:P?new s.A:void 0}),C[j]=O),c&&(x=O.getFill(),x.setColor(c)),P&&(M=O.getStroke(),M.setColor(P),M.setWidth(.5)),O.setZIndex(N));if(1!=_&&"line"==F.type){c="line-pattern"in R?void 0:Vn(Nn(F,"paint","line-color",k,E,S,T),Nn(F,"paint","line-opacity",k,E,S,T));const e=Nn(F,"paint","line-width",k,E,S,T);c&&e>0&&(++j,O=C[j],O&&O.getStroke()&&!O.getFill()&&!O.getText()||(O=new l.Ay({stroke:new s.A}),C[j]=O),M=O.getStroke(),M.setLineCap(Nn(F,"layout","line-cap",k,E,S,T)),M.setLineJoin(Nn(F,"layout","line-join",k,E,S,T)),M.setMiterLimit(Nn(F,"layout","line-miter-limit",k,E,S,T)),M.setColor(c),M.setWidth(e),M.setLineDash(R["line-dasharray"]?Nn(F,"paint","line-dasharray",k,E,S,T).map((function(t){return t*e})):null),O.setZIndex(N))}let L,U,V,G,J,W,Z,X,B,Y=!1,H=null,K=0;if((1==_||2==_)&&"icon-image"in D){const t=Nn(F,"layout","icon-image",k,E,S,T);if(t){let n;L="string"==typeof t?Jn(t,m):t.toString();const a=h?h(e,L):void 0;if(g&&f&&f[L]||a){const e=Nn(F,"layout","icon-rotation-alignment",k,E,S,T);if(2==_){const t=r.getGeometry();if(t.getFlatMidpoint||t.getFlatMidpoints){const r=t.getExtent();if(Math.sqrt(Math.max(Math.pow((r[2]-r[0])/p,2),Math.pow((r[3]-r[1])/p,2)))>150){const r="MultiLineString"===t.getType()?t.getFlatMidpoints():t.getFlatMidpoint();if(On||(Rn=[NaN,NaN],On=new o.Ay("Point",Rn,[],2,{},void 0)),n=On,Rn[0]=r[0],Rn[1]=r[1],"line"===Nn(F,"layout","symbol-placement",k,E,S,T)&&"map"===e){const e=t.getStride(),n=t.getFlatCoordinates();for(let t=0,a=n.length-e;t<a;t+=e){const a=n[t],i=n[t+1],o=n[t+e],s=n[t+e+1],l=Math.min(a,o),u=Math.max(a,o),p=r[0],c=(s-i)*(p-a)-(o-a)*(r[1]-i);if(Math.abs(c)<.001&&p<=u&&p>=l){K=Math.atan2(i-s,o-a);break}}}}}}if(2!==_||n){const t=Nn(F,"layout","icon-size",k,E,S,T),r=void 0!==R["icon-color"]?Nn(F,"paint","icon-color",k,E,S,T):null;if(!r||0!==r.a){const n=Nn(F,"paint","icon-halo-color",k,E,S,T),o=Nn(F,"paint","icon-halo-width",k,E,S,T);let s=`${L}.${t}.${o}.${n}`;if(null!==r&&(s+=`.${r}`),U=z[s],!U){const l=Ln(F,k,E,"icon",S);let u;"icon-offset"in D&&(u=Nn(F,"layout","icon-offset",k,E,S,T).slice(0),u[0]*=t,u[1]*=-t);let p=r?[255*r.r,255*r.g,255*r.b,r.a]:void 0;if(a){const r={color:p,rotateWithView:"map"===e,displacement:u,declutterMode:l,scale:t};"string"==typeof a?r.src=a:(r.img=a,r.imgSize=[a.width,a.height]),U=new i.A(r)}else{const a=f[L];let s,c,d;o?a.sdf?(s=bn(wn(g,a,r||[0,0,0,1]),{x:0,y:0,width:a.width,height:a.height,pixelRatio:a.pixelRatio},o,n),p=void 0):s=bn(g,a,o,n):(a.sdf?(b||(b=wn(g,{x:0,y:0,width:v[0],height:v[1]},{r:1,g:1,b:1,a:1})),s=b):s=g,c=[a.width,a.height],d=[a.x,a.y]),U=new i.A({color:p,img:s,imgSize:v,size:c,offset:d,rotateWithView:"map"===e,scale:t/a.pixelRatio,displacement:u,declutterMode:l})}z[s]=U}}U&&(++j,O=C[j],O&&O.getImage()&&!O.getFill()&&!O.getStroke()||(O=new l.Ay,C[j]=O),O.setGeometry(n),U.setRotation(K+cn(Nn(F,"layout","icon-rotate",k,E,S,T))),U.setOpacity(Nn(F,"paint","icon-opacity",k,E,S,T)),U.setAnchor(Fn[Nn(F,"layout","icon-anchor",k,E,S,T)]),O.setImage(U),H=O.getText(),O.setText(void 0),O.setZIndex(N),Y=!0,V=!1)}else V=!0}}}if(1==_&&"circle"===F.type){++j,O=C[j],O&&O.getImage()&&!O.getFill()&&!O.getStroke()||(O=new l.Ay,C[j]=O);const e="circle-radius"in R?Nn(F,"paint","circle-radius",k,E,S,T):5,t=Vn(Nn(F,"paint","circle-stroke-color",k,E,S,T),Nn(F,"paint","circle-stroke-opacity",k,E,S,T)),r=Nn(F,"paint","circle-translate",k,E,S,T),i=Vn(Nn(F,"paint","circle-color",k,E,S,T),Nn(F,"paint","circle-opacity",k,E,S,T)),o=Nn(F,"paint","circle-stroke-width",k,E,S,T),u=e+"."+t+"."+i+"."+o+"."+r[0]+"."+r[1];U=z[u],U||(U=new n.A({radius:e,displacement:[r[0],-r[1]],stroke:t&&o>0?new s.A({width:o,color:t}):void 0,fill:i?new a.A({color:i}):void 0,declutterMode:"none"}),z[u]=U),O.setImage(U),H=O.getText(),O.setText(void 0),O.setGeometry(void 0),O.setZIndex(N),Y=!0}if("text-field"in D){Z=Math.round(Nn(F,"layout","text-size",k,E,S,T));const e=Nn(F,"layout","text-font",k,E,S,T);W=Nn(F,"layout","text-line-height",k,E,S,T),J=en(y?y(e,t.metadata?t.metadata["ol:webfonts"]:void 0):e,Z,W),J.includes("sans-serif")||(J+=",sans-serif"),X=Nn(F,"layout","text-letter-spacing",k,E,S,T),B=Nn(F,"layout","text-max-width",k,E,S,T);const r=Nn(F,"layout","text-field",k,E,S,T);G="object"==typeof r&&r.sections?1===r.sections.length?r.toString():r.sections.reduce(((t,r,n)=>{const a=r.fontStack?r.fontStack.split(","):e,i=en(y?y(a):a,Z*(r.scale||1),W);let o=r.text;if("\n"===o)return t.push("\n",""),t;if(2==_)return t.push(zn(o,X),i),t;o=qn(o,i,B,X).split("\n");for(let e=0,r=o.length;e<r;++e)e>0&&t.push("\n",""),t.push(o[e],i);return t}),[]):Jn(r,m).trim(),d=Nn(F,"paint","text-opacity",k,E,S,T)}if(G&&d&&!V){Y||(++j,O=C[j],O&&O.getText()&&!O.getFill()&&!O.getStroke()||(O=new l.Ay,C[j]=O),O.setImage(void 0),O.setGeometry(void 0));const e=Ln(F,k,E,"text",S);O.getText()||O.setText(H),H=O.getText(),(!H||"getDeclutterMode"in H&&H.getDeclutterMode()!==e)&&(H=new u.A({padding:[2,2,2,2],declutterMode:e}),O.setText(H));const t=Nn(F,"layout","text-transform",k,E,S,T);"uppercase"==t?G=Array.isArray(G)?G.map(((e,t)=>t%2?e:e.toUpperCase())):G.toUpperCase():"lowercase"==t&&(G=Array.isArray(G)?G.map(((e,t)=>t%2?e:e.toLowerCase())):G.toLowerCase());const r=Array.isArray(G)?G:2==_?zn(G,X):qn(G,J,B,X);if(H.setText(r),H.setFont(J),H.setRotation(cn(Nn(F,"layout","text-rotate",k,E,S,T))),"function"==typeof H.setKeepUpright){const e=Nn(F,"layout","text-keep-upright",k,E,S,T);H.setKeepUpright(e)}const n=Nn(F,"layout","text-anchor",k,E,S,T),a=Y||1==_?"point":Nn(F,"layout","symbol-placement",k,E,S,T);let i;if("line-center"===a?(H.setPlacement("line"),i="center"):H.setPlacement(a),"line"===a&&"function"==typeof H.setRepeat){const e=Nn(F,"layout","symbol-spacing",k,E,S,T);H.setRepeat(2*e)}H.setOverflow("point"===a);let o=Nn(F,"paint","text-halo-width",k,E,S,T);const s=Nn(F,"layout","text-offset",k,E,S,T),p=Nn(F,"paint","text-translate",k,E,S,T);let c=0,f=0;if("point"==a){i="center",-1!==n.indexOf("left")?(i="left",f=o):-1!==n.indexOf("right")&&(i="right",f=-o);const e=Nn(F,"layout","text-rotation-alignment",k,E,S,T);H.setRotateWithView("map"==e)}else H.setMaxAngle(cn(Nn(F,"layout","text-max-angle",k,E,S,T))*G.length/r.length),H.setRotateWithView(!1);H.setTextAlign(i);let m="middle";0==n.indexOf("bottom")?(m="bottom",c=-o-.5*(W-1)*Z):0==n.indexOf("top")&&(m="top",c=o+.5*(W-1)*Z),H.setTextBaseline(m);const y=Nn(F,"layout","text-justify",k,E,S,T);H.setJustify("auto"===y?void 0:y),H.setOffsetX(s[0]*Z+f+p[0]),H.setOffsetY(s[1]*Z+c+p[1]),$.setColor(Vn(Nn(F,"paint","text-color",k,E,S,T),d)),H.setFill($);const h=Vn(Nn(F,"paint","text-halo-color",k,E,S,T),d);if(h&&o>0){q.setColor(h),o*=2;const e=.5*Z;q.setWidth(o<=e?o:e),H.setStroke(q)}else H.setStroke(void 0);const g=Nn(F,"layout","text-padding",k,E,S,T),v=H.getPadding();g!==v[0]&&(v[0]=g,v[1]=g,v[2]=g,v[3]=g),O.setZIndex(N)}}}return j>-1?(C.length=j+1,C):void 0};return e.setStyle(E),e.set("mapbox-source",_),e.set("mapbox-layers",k),e.set("mapbox-featurestate",e.get("mapbox-featurestate")||{}),E}function Xn(e,t=512){return e.getExtent()?(0,$.EN)({extent:e.getExtent(),tileSize:t,maxZoom:22}).getResolutions():fn}function Bn(e,t,r="",n={},a=void 0){let i,o,s,l,u=!0;return"string"==typeof r||Array.isArray(r)?l=r:(s=r,l=s.source||s.layers,n=s),"string"==typeof n?(i=n,s={}):(i=n.styleUrl,s=n),!1===s.updateSource&&(u=!1),a||(a=s.resolutions),i||"string"!=typeof t||t.trim().startsWith("{")||(i=t),i&&(i=i.startsWith("data:")?location.href:nn(i,s.accessToken),s=function(e,t){return t.accessToken||(t=Object.assign({},t),new URL(e).searchParams.forEach(((e,r)=>{t.accessToken=e,t.accessTokenParam=r}))),t}(i,s)),new Promise((function(r,n){gn(t,s).then((function(t){if(8!=t.version)return n(new Error("glStyle version 8 required."));if(!(e instanceof z.A||e instanceof S.A))return n(new Error("Can only apply to VectorLayer or VectorTileLayer"));const m=e instanceof S.A?"vector":"geojson";if(l?o=Array.isArray(l)?t.layers.find((function(e){return e.id===l[0]})).source:l:(o=Object.keys(t.sources).find((function(e){return t.sources[e].type===m})),l=o),!o)return n(new Error(`No ${m} source found in the glStyle.`));function h(){if(!u)return Promise.resolve();if(e instanceof S.A)return function(e,t,r){return new Promise((function(n,a){(function(e,t,r={}){const n=[t,JSON.stringify(e)].toString();let a=vn[n];if(!a||r.transformRequest){let i;r.transformRequest&&(i=(e,t)=>{const n=r.transformRequest&&r.transformRequest(t,"Tiles")||t;if(e instanceof d.A)e.setLoader(((t,r,a)=>{(0,p.hq)((()=>n)).then((r=>{fetch(r).then((e=>e.arrayBuffer())).then((r=>{const n=e.getFormat().readFeatures(r,{extent:t,featureProjection:a});e.setFeatures(n)})).catch((t=>e.setState(f.A.ERROR)))}))}));else{const t=e.getImage();(0,p.hq)((()=>n)).then((r=>{r instanceof Request?fetch(r).then((e=>e.blob())).then((e=>{const r=URL.createObjectURL(e);t.addEventListener("load",(()=>URL.revokeObjectURL(r))),t.addEventListener("error",(()=>URL.revokeObjectURL(r))),t.src=r})).catch((t=>e.setState(f.A.ERROR))):t.src=r}))}});const o=e.url;if(o&&!e.tiles){const n=on(o,r.accessToken,r.accessTokenParam||"access_token",t||location.href);if(o.startsWith("mapbox://"))a=Promise.resolve({tileJson:Object.assign({},e,{url:void 0,tiles:n}),tileLoadFunction:i});else{const e={};a=hn("Source",n[0],r,e).then((function(t){return t.tiles=t.tiles.map((function(n){return"tms"===t.scheme&&(n=n.replace("{y}","{-y}")),on(n,r.accessToken,r.accessTokenParam||"access_token",e.request.url)[0]})),Promise.resolve({tileJson:t,tileLoadFunction:i})}))}}else e=Object.assign({},e,{tiles:e.tiles.map((function(n){return"tms"===e.scheme&&(n=n.replace("{y}","{-y}")),on(n,r.accessToken,r.accessTokenParam||"access_token",t||location.href)[0]}))}),a=Promise.resolve({tileJson:Object.assign({},e),tileLoadFunction:i});vn[n]=a}return a})(e,t,r).then((function({tileJson:t,tileLoadFunction:a}){const i=function(e,t,r){const n=new k.A({tileJSON:t,tileSize:e.tileSize||t.tileSize||512}),a=n.getTileJSON(),i=n.getTileGrid(),o=(0,C.Jt)(r.projection||"EPSG:3857"),s=function(e,t){const r=e.bounds;if(r){const e=(0,C.Rb)([r[0],r[1]],t),n=(0,C.Rb)([r[2],r[3]],t);return[e[0],e[1],n[0],n[1]]}return(0,C.Jt)(t).getExtent()}(a,o),l=o.getExtent(),u=a.minzoom||0,p=a.maxzoom||22,c={attributions:n.getAttributions(),projection:o,tileGrid:new w.A({origin:l?(0,E.Py)(l):i.getOrigin(0),extent:s||i.getExtent(),minZoom:u,resolutions:Xn(o,t.tileSize).slice(0,p+1),tileSize:i.getTileSize(0)})};return Array.isArray(a.tiles)?c.urls=a.tiles:c.url=a.tiles,c}(e,t,r);i.tileLoadFunction=a,i.format=new v.A,n(new M.A(i))})).catch(a)}))}(t.sources[o],i,s).then((function(t){const r=e.getSource();r?t!==r&&(r.setTileUrlFunction(t.getTileUrlFunction()),"function"==typeof r.setUrls&&"function"==typeof t.getUrls&&r.setUrls(t.getUrls()),r.format_||(r.format_=t.format_),r.getAttributions()||r.setAttributions(t.getAttributions()),r.getTileLoadFunction()===M.Y&&r.setTileLoadFunction(t.getTileLoadFunction()),(0,C.tI)(r.getProjection(),t.getProjection())&&(r.tileGrid=t.getTileGrid())):e.setSource(t);const n=e.getSource().getTileGrid();!isFinite(e.getMaxResolution())&&!isFinite(e.getMinZoom())&&n.getMinZoom()>0&&e.setMaxResolution(function(e,t){const r=Math.floor(e),n=Math.pow(2,e-r);return t[r]/n}(Math.max(0,n.getMinZoom()-1e-12),n.getResolutions()))}));const r=t.sources[o];let n=e.getSource();n&&n.get("mapbox-source")===r||(n=function(e,t,r){const n=r.projection?new y.A({dataProjection:r.projection}):new y.A,a=e.data,i={};if("string"==typeof a){const[i]=on(a,r.accessToken,r.accessTokenParam||"access_token",t||location.href);if(/\{bbox-[0-9a-z-]+\}/.test(i)){const t=(e,t,r)=>{const n=function(e){return`{bbox-${(e?e.getCode():"EPSG:3857").toLowerCase().replace(/[^a-z0-9]/g,"-")}}`}(r);return i.replace(n,`${e.join(",")}`)},a=new A.A({attributions:e.attribution,format:n,loader:(e,n,i,o,s)=>{hn("GeoJSON","function"==typeof t?t(e,n,i):t,r).then((e=>{const t=a.getFormat().readFeatures(e,{featureProjection:i});a.addFeatures(t),o(t)})).catch((t=>{a.removeLoadedExtent(e),s()}))},strategy:q.Qk});return a.set("mapbox-source",e),a}const o=new A.A({attributions:e.attribution,format:n,url:i,loader:(e,t,n,a,s)=>{hn("GeoJSON",i,r).then((e=>{const t=o.getFormat().readFeatures(e,{featureProjection:n});o.addFeatures(t),a(t)})).catch((t=>{o.removeLoadedExtent(e),s()}))}});return o}i.features=n.readFeatures(a,{featureProjection:(0,C.Tf)()||"EPSG:3857"});const o=new A.A(Object.assign({attributions:e.attribution,format:n},i));return o.set("mapbox-source",e),o}(r,i,s));const a=e.getSource();return a?n!==a&&(a.getAttributions()||a.setAttributions(n.getAttributions()),a.format_||(a.format_=n.getFormat()),a.url_=n.getUrl()):e.setSource(n),Promise.resolve()}let g,b,x,$;function T(){if($||t.sprite&&!b)$?(e.setStyle($),h().then(r).catch(n)):n(new Error("Something went wrong trying to apply style."));else{if(s.projection&&!a){const e=(0,C.Jt)(s.projection).getUnits();"m"!==e&&(a=fn.map((t=>t/_.I[e])))}$=Zn(e,t,l,a,b,x,((e,t=s.webfonts)=>function(e,t="https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css"){const r=e.toString();if(r in In)return In[r];const n=[];for(let t=0,r=e.length;t<r;++t){e[t]=e[t].replace("Arial Unicode MS","Arial");const r=e[t],a=en(r,1);(0,c.fZ)(a);const i=a.split(" ");n.push([i.slice(3).join(" ").replace(/"/g,""),i[1],i[0]])}for(let e=0,r=n.length;e<r;++e){const r=n[e],a=r[0];if(!Tn(a)&&100!==c.yY.get(`${r[2]}\n${r[1]} \n${a}`)){const e=t.replace("{font-family}",a.replace(/ /g,"-").toLowerCase()).replace("{Font+Family}",a.replace(/ /g,"+")).replace("{fontweight}",r[1]).replace("{-fontstyle}",r[2].replace("normal","").replace(/(.+)/,"-$1")).replace("{fontstyle}",r[2]);if(!document.querySelector('link[href="'+e+'"]')){const t=document.createElement("link");t.href=e,t.rel="stylesheet",document.head.appendChild(t)}}}return In[r]=e,e}(e,t)),s.getImage),e.getStyle()?h().then(r).catch(n):n(new Error(`Nothing to show for source [${o}]`))}}if(t.sprite){const e=new URL(function(e,t,r){const n=rn(e);if(!n)return decodeURI(new URL(e,r).href);if(0!==n.indexOf("sprites/"))throw new Error(`unexpected sprites url: ${e}`);const a=n.slice(8);return`${tn}/styles/v1/${a}/sprite?access_token=${t}`}(t.sprite,s.accessToken,i||location.href));g=window.devicePixelRatio>=1.5?.5:1;const r=.5==g?"@2x":"";let a=e.origin+e.pathname+r+".json"+e.search;new Promise((function(t,r){hn("Sprite",a,s).then(t).catch((function(n){a=e.origin+e.pathname+".json"+e.search,hn("Sprite",a,s).then(t).catch(r)}))})).then((function(t){if(void 0===t&&n(new Error("No sprites found.")),b=t,x=e.origin+e.pathname+r+".png"+e.search,s.transformRequest){const e=s.transformRequest(x,"SpriteImage")||x;(e instanceof Request||e instanceof Promise)&&(x=e)}T()})).catch((function(e){n(new Error(`Sprites cannot be loaded: ${a}: ${e.message}`))}))}else T()})).catch(n)}))}const Yn={};function Hn(e,t,r={}){return gn(t,r).then((function(t){!function(e,t,r){t.layers.some((function(t){if("background"===t.type){if(e instanceof h.A)return e.setBackground((function(e){return Kn(t,e,r,{})})),!0;if(e instanceof b.A||e instanceof g.A)return e.getLayers().insertAt(0,function(e,t,r){const n=document.createElement("div");return n.className="ol-mapbox-style-background",n.style.position="absolute",n.style.width="100%",n.style.height="100%",new h.A({source:new x.A({}),render(a){const i=Kn(e,a.viewState.resolution,t,r);return n.style.backgroundColor=i,n}})}(t,r,{})),!0}}))}(e,t,r)}))}function Kn(e,t,r,n){const a={id:e.id,type:e.type},i=e.layout||{},o=e.paint||{};a.paint=o;const s=mn(t,r.resolutions||fn);let l;const u=Nn(a,"paint","background-color",s,Yn,n);return void 0!==o["background-opacity"]&&(l=Nn(a,"paint","background-opacity",s,Yn,n)),"none"==i.visibility?void 0:Vn(u,l)}class Qn extends T.Ay{constructor(e){super(I.A.ERROR),this.error=e}}class ea extends S.A{constructor(e){const t=!("declutter"in e)||e.declutter,r=new M.A({state:"loading",format:new v.A});super({source:r,background:!1===e.background?null:e.background,declutter:t,className:e.className,opacity:e.opacity,visible:e.visible,zIndex:e.zIndex,minResolution:e.minResolution,maxResolution:e.maxResolution,minZoom:e.minZoom,maxZoom:e.maxZoom,renderOrder:e.renderOrder,renderBuffer:e.renderBuffer,renderMode:e.renderMode,map:e.map,updateWhileAnimating:e.updateWhileAnimating,updateWhileInteracting:e.updateWhileInteracting,preload:e.preload,useInterimTilesOnError:e.useInterimTilesOnError,properties:e.properties}),e.accessToken&&(this.accessToken=e.accessToken);const n=[Bn(this,e.styleUrl,e.layers||e.source,{accessToken:this.accessToken})];void 0===this.getBackground()&&n.push(Hn(this,e.styleUrl,{accessToken:this.accessToken})),Promise.all(n).then((()=>{r.setState("ready")})).catch((e=>{this.dispatchEvent(new Qn(e)),this.getSource().setState("error")}))}}},4662:(e,t,r)=>{r.d(t,{A:()=>x});var n=r(8112),a=r(1217),i=r(6702),o=r(503),s=r(2871),l=r(4294),u=r(1064),p=r(3402),c=r(5286),f=r(6391),d=r(4778),m=r(8217);class y extends m.Ay{constructor(e){super(),e=e||{},this.dataProjection=new c.A({code:"",units:"tile-pixels"}),this.featureClass=e.featureClass?e.featureClass:d.Ay,this.geometryName_=e.geometryName,this.layerName_=e.layerName?e.layerName:"layer",this.layers_=e.layers?e.layers:null,this.idProperty_=e.idProperty,this.supportedMediaTypes=["application/vnd.mapbox-vector-tile","application/x-protobuf"]}readRawGeometry_(e,t,r,n){e.pos=t.geometry;const a=e.readVarint()+e.pos;let i=1,o=0,s=0,l=0,u=0,p=0;for(;e.pos<a;){if(!o){const t=e.readVarint();i=7&t,o=t>>3}if(o--,1===i||2===i)s+=e.readSVarint(),l+=e.readSVarint(),1===i&&u>p&&(n.push(u),p=u),r.push(s,l),u+=2;else{if(7!==i)throw new Error("Invalid command found in the PBF");u>p&&(r.push(r[p],r[p+1]),u+=2)}}u>p&&(n.push(u),p=u)}createFeature_(e,t,r){const n=t.type;if(0===n)return null;let c;const f=t.properties;let y;this.idProperty_?(y=f[this.idProperty_],delete f[this.idProperty_]):y=t.id,f[this.layerName_]=t.layer.name;const h=[],g=[];this.readRawGeometry_(e,t,h,g);const v=function(e,t){let r;return 1===e?r=1===t?"Point":"MultiPoint":2===e?r=1===t?"LineString":"MultiLineString":3===e&&(r="Polygon"),r}(n,g.length);if(this.featureClass===d.Ay)c=new this.featureClass(v,h,g,2,f,y),c.transform(r.dataProjection);else{let e;if("Polygon"==v){const t=(0,p.yJ)(h,g);e=t.length>1?new s.A(h,"XY",t):new u.Ay(h,"XY",g)}else e="Point"===v?new l.A(h,"XY"):"LineString"===v?new a.A(h,"XY"):"MultiPoint"===v?new o.A(h,"XY"):"MultiLineString"===v?new i.A(h,"XY",g):null;c=new(0,this.featureClass),this.geometryName_&&c.setGeometryName(this.geometryName_);const t=(0,m.hX)(e,!1,r);c.setGeometry(t),void 0!==y&&c.setId(y),c.setProperties(f,!0)}return c}getType(){return"arraybuffer"}readFeatures(e,t){const r=this.layers_;t=this.adaptOptions(t);const a=(0,f.Jt)(t.dataProjection);a.setWorldExtent(t.extent),t.dataProjection=a;const i=new n.A(e),o=i.readFields(h,{}),s=[];for(const e in o){if(r&&!r.includes(e))continue;const n=o[e],l=n?[0,0,n.extent,n.extent]:null;a.setExtent(l);for(let e=0,r=n.length;e<r;++e){const r=b(i,n,e),a=this.createFeature_(i,r,t);null!==a&&s.push(a)}}return s}readProjection(e){return this.dataProjection}setLayers(e){this.layers_=e}}function h(e,t,r){if(3===e){const e={keys:[],values:[],features:[]},n=r.readVarint()+r.pos;r.readFields(g,e,n),e.length=e.features.length,e.length&&(t[e.name]=e)}}function g(e,t,r){if(15===e)t.version=r.readVarint();else if(1===e)t.name=r.readString();else if(5===e)t.extent=r.readVarint();else if(2===e)t.features.push(r.pos);else if(3===e)t.keys.push(r.readString());else if(4===e){let n=null;const a=r.readVarint()+r.pos;for(;r.pos<a;)n=1==(e=r.readVarint()>>3)?r.readString():2===e?r.readFloat():3===e?r.readDouble():4===e?r.readVarint64():5===e?r.readVarint():6===e?r.readSVarint():7===e?r.readBoolean():null;t.values.push(n)}}function v(e,t,r){if(1==e)t.id=r.readVarint();else if(2==e){const e=r.readVarint()+r.pos;for(;r.pos<e;){const e=t.layer.keys[r.readVarint()],n=t.layer.values[r.readVarint()];t.properties[e]=n}}else 3==e?t.type=r.readVarint():4==e&&(t.geometry=r.pos)}function b(e,t,r){e.pos=t.features[r];const n=e.readVarint()+e.pos,a={layer:t,type:0,properties:{}};return e.readFields(v,a,n),a}const x=y}}]);